### YamlMime:XRefMap
sorted: true
references:
- uid: activation
  name: Activation
  href: articles/activation.html
- uid: costfn
  name: Cost Function
  href: articles/cost-function.html
- uid: creating-nnet
  name: Creating your first Neural Network
  href: articles/creating-neural-network.html
- uid: graddesc
  name: Gradient Descender
  href: articles/gradient-descender.html
- uid: intro
  name: Introduction
  href: articles/intro.html
- uid: NeuralNetLearning
  name: NeuralNetLearning
  href: api/NeuralNetLearning.html
  commentId: N:NeuralNetLearning
  fullName: NeuralNetLearning
  nameWithType: NeuralNetLearning
- uid: NeuralNetLearning.Activations
  name: NeuralNetLearning.Activations
  href: api/NeuralNetLearning.Activations.html
  commentId: N:NeuralNetLearning.Activations
  fullName: NeuralNetLearning.Activations
  nameWithType: NeuralNetLearning.Activations
- uid: NeuralNetLearning.Activations.Activation
  name: Activation
  href: api/NeuralNetLearning.Activations.Activation.html
  commentId: T:NeuralNetLearning.Activations.Activation
  fullName: NeuralNetLearning.Activations.Activation
  nameWithType: Activation
- uid: NeuralNetLearning.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Activations.Activation.html#NeuralNetLearning_Activations_Activation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: Activation.Apply(Vector<Double>)
  nameWithType.vb: Activation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Activations.Activation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Activations.Activation.html#NeuralNetLearning_Activations_Activation_Apply_
  commentId: Overload:NeuralNetLearning.Activations.Activation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.Activation.Apply
  nameWithType: Activation.Apply
- uid: NeuralNetLearning.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Activations.Activation.html#NeuralNetLearning_Activations_Activation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: Activation.Derivative(Vector<Double>)
  nameWithType.vb: Activation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Activations.Activation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Activations.Activation.html#NeuralNetLearning_Activations_Activation_Derivative_
  commentId: Overload:NeuralNetLearning.Activations.Activation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.Activation.Derivative
  nameWithType: Activation.Derivative
- uid: NeuralNetLearning.Activations.IdentityActivation
  name: IdentityActivation
  href: api/NeuralNetLearning.Activations.IdentityActivation.html
  commentId: T:NeuralNetLearning.Activations.IdentityActivation
  fullName: NeuralNetLearning.Activations.IdentityActivation
  nameWithType: IdentityActivation
- uid: NeuralNetLearning.Activations.IdentityActivation.#ctor
  name: IdentityActivation()
  href: api/NeuralNetLearning.Activations.IdentityActivation.html#NeuralNetLearning_Activations_IdentityActivation__ctor
  commentId: M:NeuralNetLearning.Activations.IdentityActivation.#ctor
  fullName: NeuralNetLearning.Activations.IdentityActivation.IdentityActivation()
  nameWithType: IdentityActivation.IdentityActivation()
- uid: NeuralNetLearning.Activations.IdentityActivation.#ctor*
  name: IdentityActivation
  href: api/NeuralNetLearning.Activations.IdentityActivation.html#NeuralNetLearning_Activations_IdentityActivation__ctor_
  commentId: Overload:NeuralNetLearning.Activations.IdentityActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.IdentityActivation.IdentityActivation
  nameWithType: IdentityActivation.IdentityActivation
- uid: NeuralNetLearning.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Activations.IdentityActivation.html#NeuralNetLearning_Activations_IdentityActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: IdentityActivation.Apply(Vector<Double>)
  nameWithType.vb: IdentityActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Activations.IdentityActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Activations.IdentityActivation.html#NeuralNetLearning_Activations_IdentityActivation_Apply_
  commentId: Overload:NeuralNetLearning.Activations.IdentityActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.IdentityActivation.Apply
  nameWithType: IdentityActivation.Apply
- uid: NeuralNetLearning.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Activations.IdentityActivation.html#NeuralNetLearning_Activations_IdentityActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: IdentityActivation.Derivative(Vector<Double>)
  nameWithType.vb: IdentityActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Activations.IdentityActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Activations.IdentityActivation.html#NeuralNetLearning_Activations_IdentityActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Activations.IdentityActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.IdentityActivation.Derivative
  nameWithType: IdentityActivation.Derivative
- uid: NeuralNetLearning.Activations.ReluActivation
  name: ReluActivation
  href: api/NeuralNetLearning.Activations.ReluActivation.html
  commentId: T:NeuralNetLearning.Activations.ReluActivation
  fullName: NeuralNetLearning.Activations.ReluActivation
  nameWithType: ReluActivation
- uid: NeuralNetLearning.Activations.ReluActivation.#ctor
  name: ReluActivation()
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation__ctor
  commentId: M:NeuralNetLearning.Activations.ReluActivation.#ctor
  fullName: NeuralNetLearning.Activations.ReluActivation.ReluActivation()
  nameWithType: ReluActivation.ReluActivation()
- uid: NeuralNetLearning.Activations.ReluActivation.#ctor(System.Double)
  name: ReluActivation(Double)
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation__ctor_System_Double_
  commentId: M:NeuralNetLearning.Activations.ReluActivation.#ctor(System.Double)
  fullName: NeuralNetLearning.Activations.ReluActivation.ReluActivation(System.Double)
  nameWithType: ReluActivation.ReluActivation(Double)
- uid: NeuralNetLearning.Activations.ReluActivation.#ctor*
  name: ReluActivation
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation__ctor_
  commentId: Overload:NeuralNetLearning.Activations.ReluActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.ReluActivation.ReluActivation
  nameWithType: ReluActivation.ReluActivation
- uid: NeuralNetLearning.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: ReluActivation.Apply(Vector<Double>)
  nameWithType.vb: ReluActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Activations.ReluActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation_Apply_
  commentId: Overload:NeuralNetLearning.Activations.ReluActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.ReluActivation.Apply
  nameWithType: ReluActivation.Apply
- uid: NeuralNetLearning.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: ReluActivation.Derivative(Vector<Double>)
  nameWithType.vb: ReluActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Activations.ReluActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Activations.ReluActivation.html#NeuralNetLearning_Activations_ReluActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Activations.ReluActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.ReluActivation.Derivative
  nameWithType: ReluActivation.Derivative
- uid: NeuralNetLearning.Activations.SoftmaxActivation
  name: SoftmaxActivation
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html
  commentId: T:NeuralNetLearning.Activations.SoftmaxActivation
  fullName: NeuralNetLearning.Activations.SoftmaxActivation
  nameWithType: SoftmaxActivation
- uid: NeuralNetLearning.Activations.SoftmaxActivation.#ctor
  name: SoftmaxActivation()
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html#NeuralNetLearning_Activations_SoftmaxActivation__ctor
  commentId: M:NeuralNetLearning.Activations.SoftmaxActivation.#ctor
  fullName: NeuralNetLearning.Activations.SoftmaxActivation.SoftmaxActivation()
  nameWithType: SoftmaxActivation.SoftmaxActivation()
- uid: NeuralNetLearning.Activations.SoftmaxActivation.#ctor*
  name: SoftmaxActivation
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html#NeuralNetLearning_Activations_SoftmaxActivation__ctor_
  commentId: Overload:NeuralNetLearning.Activations.SoftmaxActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.SoftmaxActivation.SoftmaxActivation
  nameWithType: SoftmaxActivation.SoftmaxActivation
- uid: NeuralNetLearning.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html#NeuralNetLearning_Activations_SoftmaxActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: SoftmaxActivation.Apply(Vector<Double>)
  nameWithType.vb: SoftmaxActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Activations.SoftmaxActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html#NeuralNetLearning_Activations_SoftmaxActivation_Apply_
  commentId: Overload:NeuralNetLearning.Activations.SoftmaxActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.SoftmaxActivation.Apply
  nameWithType: SoftmaxActivation.Apply
- uid: NeuralNetLearning.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html#NeuralNetLearning_Activations_SoftmaxActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: SoftmaxActivation.Derivative(Vector<Double>)
  nameWithType.vb: SoftmaxActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Activations.SoftmaxActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Activations.SoftmaxActivation.html#NeuralNetLearning_Activations_SoftmaxActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Activations.SoftmaxActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.SoftmaxActivation.Derivative
  nameWithType: SoftmaxActivation.Derivative
- uid: NeuralNetLearning.Activations.TanhActivation
  name: TanhActivation
  href: api/NeuralNetLearning.Activations.TanhActivation.html
  commentId: T:NeuralNetLearning.Activations.TanhActivation
  fullName: NeuralNetLearning.Activations.TanhActivation
  nameWithType: TanhActivation
- uid: NeuralNetLearning.Activations.TanhActivation.#ctor
  name: TanhActivation()
  href: api/NeuralNetLearning.Activations.TanhActivation.html#NeuralNetLearning_Activations_TanhActivation__ctor
  commentId: M:NeuralNetLearning.Activations.TanhActivation.#ctor
  fullName: NeuralNetLearning.Activations.TanhActivation.TanhActivation()
  nameWithType: TanhActivation.TanhActivation()
- uid: NeuralNetLearning.Activations.TanhActivation.#ctor*
  name: TanhActivation
  href: api/NeuralNetLearning.Activations.TanhActivation.html#NeuralNetLearning_Activations_TanhActivation__ctor_
  commentId: Overload:NeuralNetLearning.Activations.TanhActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.TanhActivation.TanhActivation
  nameWithType: TanhActivation.TanhActivation
- uid: NeuralNetLearning.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Activations.TanhActivation.html#NeuralNetLearning_Activations_TanhActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: TanhActivation.Apply(Vector<Double>)
  nameWithType.vb: TanhActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Activations.TanhActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Activations.TanhActivation.html#NeuralNetLearning_Activations_TanhActivation_Apply_
  commentId: Overload:NeuralNetLearning.Activations.TanhActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.TanhActivation.Apply
  nameWithType: TanhActivation.Apply
- uid: NeuralNetLearning.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Activations.TanhActivation.html#NeuralNetLearning_Activations_TanhActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: TanhActivation.Derivative(Vector<Double>)
  nameWithType.vb: TanhActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Activations.TanhActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Activations.TanhActivation.html#NeuralNetLearning_Activations_TanhActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Activations.TanhActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Activations.TanhActivation.Derivative
  nameWithType: TanhActivation.Derivative
- uid: NeuralNetLearning.CostFunctions
  name: NeuralNetLearning.CostFunctions
  href: api/NeuralNetLearning.CostFunctions.html
  commentId: N:NeuralNetLearning.CostFunctions
  fullName: NeuralNetLearning.CostFunctions
  nameWithType: NeuralNetLearning.CostFunctions
- uid: NeuralNetLearning.CostFunctions.CostFunction
  name: CostFunction
  href: api/NeuralNetLearning.CostFunctions.CostFunction.html
  commentId: T:NeuralNetLearning.CostFunctions.CostFunction
  fullName: NeuralNetLearning.CostFunctions.CostFunction
  nameWithType: CostFunction
- uid: NeuralNetLearning.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.CostFunction.html#NeuralNetLearning_CostFunctions_CostFunction_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CostFunction.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: CostFunction.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.CostFunction.Apply*
  name: Apply
  href: api/NeuralNetLearning.CostFunctions.CostFunction.html#NeuralNetLearning_CostFunctions_CostFunction_Apply_
  commentId: Overload:NeuralNetLearning.CostFunctions.CostFunction.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.CostFunction.Apply
  nameWithType: CostFunction.Apply
- uid: NeuralNetLearning.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.CostFunction.html#NeuralNetLearning_CostFunctions_CostFunction_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CostFunction.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: CostFunction.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.CostFunction.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.CostFunctions.CostFunction.html#NeuralNetLearning_CostFunctions_CostFunction_Derivative_
  commentId: Overload:NeuralNetLearning.CostFunctions.CostFunction.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.CostFunction.Derivative
  nameWithType: CostFunction.Derivative
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost
  name: CrossEntropyCost
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html
  commentId: T:NeuralNetLearning.CostFunctions.CrossEntropyCost
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost
  nameWithType: CrossEntropyCost
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost.#ctor
  name: CrossEntropyCost()
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_CostFunctions_CrossEntropyCost__ctor
  commentId: M:NeuralNetLearning.CostFunctions.CrossEntropyCost.#ctor
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost.CrossEntropyCost()
  nameWithType: CrossEntropyCost.CrossEntropyCost()
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost.#ctor*
  name: CrossEntropyCost
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_CostFunctions_CrossEntropyCost__ctor_
  commentId: Overload:NeuralNetLearning.CostFunctions.CrossEntropyCost.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost.CrossEntropyCost
  nameWithType: CrossEntropyCost.CrossEntropyCost
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_CostFunctions_CrossEntropyCost_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CrossEntropyCost.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: CrossEntropyCost.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply*
  name: Apply
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_CostFunctions_CrossEntropyCost_Apply_
  commentId: Overload:NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost.Apply
  nameWithType: CrossEntropyCost.Apply
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_CostFunctions_CrossEntropyCost_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CrossEntropyCost.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: CrossEntropyCost.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_CostFunctions_CrossEntropyCost_Derivative_
  commentId: Overload:NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.CrossEntropyCost.Derivative
  nameWithType: CrossEntropyCost.Derivative
- uid: NeuralNetLearning.CostFunctions.HuberCost
  name: HuberCost
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html
  commentId: T:NeuralNetLearning.CostFunctions.HuberCost
  fullName: NeuralNetLearning.CostFunctions.HuberCost
  nameWithType: HuberCost
- uid: NeuralNetLearning.CostFunctions.HuberCost.#ctor
  name: HuberCost()
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost__ctor
  commentId: M:NeuralNetLearning.CostFunctions.HuberCost.#ctor
  fullName: NeuralNetLearning.CostFunctions.HuberCost.HuberCost()
  nameWithType: HuberCost.HuberCost()
- uid: NeuralNetLearning.CostFunctions.HuberCost.#ctor(System.Double)
  name: HuberCost(Double)
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost__ctor_System_Double_
  commentId: M:NeuralNetLearning.CostFunctions.HuberCost.#ctor(System.Double)
  fullName: NeuralNetLearning.CostFunctions.HuberCost.HuberCost(System.Double)
  nameWithType: HuberCost.HuberCost(Double)
- uid: NeuralNetLearning.CostFunctions.HuberCost.#ctor*
  name: HuberCost
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost__ctor_
  commentId: Overload:NeuralNetLearning.CostFunctions.HuberCost.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.HuberCost.HuberCost
  nameWithType: HuberCost.HuberCost
- uid: NeuralNetLearning.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: HuberCost.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: HuberCost.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.HuberCost.Apply*
  name: Apply
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost_Apply_
  commentId: Overload:NeuralNetLearning.CostFunctions.HuberCost.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.HuberCost.Apply
  nameWithType: HuberCost.Apply
- uid: NeuralNetLearning.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: HuberCost.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: HuberCost.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.HuberCost.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.CostFunctions.HuberCost.html#NeuralNetLearning_CostFunctions_HuberCost_Derivative_
  commentId: Overload:NeuralNetLearning.CostFunctions.HuberCost.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.HuberCost.Derivative
  nameWithType: HuberCost.Derivative
- uid: NeuralNetLearning.CostFunctions.MSECost
  name: MSECost
  href: api/NeuralNetLearning.CostFunctions.MSECost.html
  commentId: T:NeuralNetLearning.CostFunctions.MSECost
  fullName: NeuralNetLearning.CostFunctions.MSECost
  nameWithType: MSECost
- uid: NeuralNetLearning.CostFunctions.MSECost.#ctor
  name: MSECost()
  href: api/NeuralNetLearning.CostFunctions.MSECost.html#NeuralNetLearning_CostFunctions_MSECost__ctor
  commentId: M:NeuralNetLearning.CostFunctions.MSECost.#ctor
  fullName: NeuralNetLearning.CostFunctions.MSECost.MSECost()
  nameWithType: MSECost.MSECost()
- uid: NeuralNetLearning.CostFunctions.MSECost.#ctor*
  name: MSECost
  href: api/NeuralNetLearning.CostFunctions.MSECost.html#NeuralNetLearning_CostFunctions_MSECost__ctor_
  commentId: Overload:NeuralNetLearning.CostFunctions.MSECost.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.MSECost.MSECost
  nameWithType: MSECost.MSECost
- uid: NeuralNetLearning.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.MSECost.html#NeuralNetLearning_CostFunctions_MSECost_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: MSECost.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: MSECost.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.MSECost.Apply*
  name: Apply
  href: api/NeuralNetLearning.CostFunctions.MSECost.html#NeuralNetLearning_CostFunctions_MSECost_Apply_
  commentId: Overload:NeuralNetLearning.CostFunctions.MSECost.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.MSECost.Apply
  nameWithType: MSECost.Apply
- uid: NeuralNetLearning.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.CostFunctions.MSECost.html#NeuralNetLearning_CostFunctions_MSECost_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: MSECost.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: MSECost.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.CostFunctions.MSECost.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.CostFunctions.MSECost.html#NeuralNetLearning_CostFunctions_MSECost_Derivative_
  commentId: Overload:NeuralNetLearning.CostFunctions.MSECost.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.CostFunctions.MSECost.Derivative
  nameWithType: MSECost.Derivative
- uid: NeuralNetLearning.GradientDescent
  name: NeuralNetLearning.GradientDescent
  href: api/NeuralNetLearning.GradientDescent.html
  commentId: N:NeuralNetLearning.GradientDescent
  fullName: NeuralNetLearning.GradientDescent
  nameWithType: NeuralNetLearning.GradientDescent
- uid: NeuralNetLearning.GradientDescent.AdamGradientDescender
  name: AdamGradientDescender
  href: api/NeuralNetLearning.GradientDescent.AdamGradientDescender.html
  commentId: T:NeuralNetLearning.GradientDescent.AdamGradientDescender
  fullName: NeuralNetLearning.GradientDescent.AdamGradientDescender
  nameWithType: AdamGradientDescender
- uid: NeuralNetLearning.GradientDescent.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double)
  name: AdamGradientDescender(Double, Double, Double)
  href: api/NeuralNetLearning.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_GradientDescent_AdamGradientDescender__ctor_System_Double_System_Double_System_Double_
  commentId: M:NeuralNetLearning.GradientDescent.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double)
  fullName: NeuralNetLearning.GradientDescent.AdamGradientDescender.AdamGradientDescender(System.Double, System.Double, System.Double)
  nameWithType: AdamGradientDescender.AdamGradientDescender(Double, Double, Double)
- uid: NeuralNetLearning.GradientDescent.AdamGradientDescender.#ctor*
  name: AdamGradientDescender
  href: api/NeuralNetLearning.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_GradientDescent_AdamGradientDescender__ctor_
  commentId: Overload:NeuralNetLearning.GradientDescent.AdamGradientDescender.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.GradientDescent.AdamGradientDescender.AdamGradientDescender
  nameWithType: AdamGradientDescender.AdamGradientDescender
- uid: NeuralNetLearning.GradientDescent.AdamGradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  name: GradientDescentStep(Parameter)
  href: api/NeuralNetLearning.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_GradientDescent_AdamGradientDescender_GradientDescentStep_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.GradientDescent.AdamGradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.GradientDescent.AdamGradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  nameWithType: AdamGradientDescender.GradientDescentStep(Parameter)
- uid: NeuralNetLearning.GradientDescent.AdamGradientDescender.GradientDescentStep*
  name: GradientDescentStep
  href: api/NeuralNetLearning.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_GradientDescent_AdamGradientDescender_GradientDescentStep_
  commentId: Overload:NeuralNetLearning.GradientDescent.AdamGradientDescender.GradientDescentStep
  isSpec: "True"
  fullName: NeuralNetLearning.GradientDescent.AdamGradientDescender.GradientDescentStep
  nameWithType: AdamGradientDescender.GradientDescentStep
- uid: NeuralNetLearning.GradientDescent.GradientDescender
  name: GradientDescender
  href: api/NeuralNetLearning.GradientDescent.GradientDescender.html
  commentId: T:NeuralNetLearning.GradientDescent.GradientDescender
  fullName: NeuralNetLearning.GradientDescent.GradientDescender
  nameWithType: GradientDescender
- uid: NeuralNetLearning.GradientDescent.GradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  name: GradientDescentStep(Parameter)
  href: api/NeuralNetLearning.GradientDescent.GradientDescender.html#NeuralNetLearning_GradientDescent_GradientDescender_GradientDescentStep_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.GradientDescent.GradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.GradientDescent.GradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  nameWithType: GradientDescender.GradientDescentStep(Parameter)
- uid: NeuralNetLearning.GradientDescent.GradientDescender.GradientDescentStep*
  name: GradientDescentStep
  href: api/NeuralNetLearning.GradientDescent.GradientDescender.html#NeuralNetLearning_GradientDescent_GradientDescender_GradientDescentStep_
  commentId: Overload:NeuralNetLearning.GradientDescent.GradientDescender.GradientDescentStep
  isSpec: "True"
  fullName: NeuralNetLearning.GradientDescent.GradientDescender.GradientDescentStep
  nameWithType: GradientDescender.GradientDescentStep
- uid: NeuralNetLearning.GradientDescent.StochasticGradientDescender
  name: StochasticGradientDescender
  href: api/NeuralNetLearning.GradientDescent.StochasticGradientDescender.html
  commentId: T:NeuralNetLearning.GradientDescent.StochasticGradientDescender
  fullName: NeuralNetLearning.GradientDescent.StochasticGradientDescender
  nameWithType: StochasticGradientDescender
- uid: NeuralNetLearning.GradientDescent.StochasticGradientDescender.#ctor(System.Double)
  name: StochasticGradientDescender(Double)
  href: api/NeuralNetLearning.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_GradientDescent_StochasticGradientDescender__ctor_System_Double_
  commentId: M:NeuralNetLearning.GradientDescent.StochasticGradientDescender.#ctor(System.Double)
  fullName: NeuralNetLearning.GradientDescent.StochasticGradientDescender.StochasticGradientDescender(System.Double)
  nameWithType: StochasticGradientDescender.StochasticGradientDescender(Double)
- uid: NeuralNetLearning.GradientDescent.StochasticGradientDescender.#ctor*
  name: StochasticGradientDescender
  href: api/NeuralNetLearning.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_GradientDescent_StochasticGradientDescender__ctor_
  commentId: Overload:NeuralNetLearning.GradientDescent.StochasticGradientDescender.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.GradientDescent.StochasticGradientDescender.StochasticGradientDescender
  nameWithType: StochasticGradientDescender.StochasticGradientDescender
- uid: NeuralNetLearning.GradientDescent.StochasticGradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  name: GradientDescentStep(Parameter)
  href: api/NeuralNetLearning.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_GradientDescent_StochasticGradientDescender_GradientDescentStep_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.GradientDescent.StochasticGradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.GradientDescent.StochasticGradientDescender.GradientDescentStep(NeuralNetLearning.Internal.Parameter)
  nameWithType: StochasticGradientDescender.GradientDescentStep(Parameter)
- uid: NeuralNetLearning.GradientDescent.StochasticGradientDescender.GradientDescentStep*
  name: GradientDescentStep
  href: api/NeuralNetLearning.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_GradientDescent_StochasticGradientDescender_GradientDescentStep_
  commentId: Overload:NeuralNetLearning.GradientDescent.StochasticGradientDescender.GradientDescentStep
  isSpec: "True"
  fullName: NeuralNetLearning.GradientDescent.StochasticGradientDescender.GradientDescentStep
  nameWithType: StochasticGradientDescender.GradientDescentStep
- uid: NeuralNetLearning.Internal
  name: NeuralNetLearning.Internal
  href: api/NeuralNetLearning.Internal.html
  commentId: N:NeuralNetLearning.Internal
  fullName: NeuralNetLearning.Internal
  nameWithType: NeuralNetLearning.Internal
- uid: NeuralNetLearning.Internal.MatrixFunctions
  name: MatrixFunctions
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html
  commentId: T:NeuralNetLearning.Internal.MatrixFunctions
  fullName: NeuralNetLearning.Internal.MatrixFunctions
  nameWithType: MatrixFunctions
- uid: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrices(System.Int32,System.Int32)
  name: BasisMatrices(Int32, Int32)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_BasisMatrices_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.BasisMatrices(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrices(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.BasisMatrices(Int32, Int32)
- uid: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrices*
  name: BasisMatrices
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_BasisMatrices_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.BasisMatrices
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrices
  nameWithType: MatrixFunctions.BasisMatrices
- uid: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrix(System.Int32,System.Int32,System.Int32,System.Int32)
  name: BasisMatrix(Int32, Int32, Int32, Int32)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_BasisMatrix_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.BasisMatrix(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrix(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: MatrixFunctions.BasisMatrix(Int32, Int32, Int32, Int32)
- uid: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrix*
  name: BasisMatrix
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_BasisMatrix_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.BasisMatrix
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.BasisMatrix
  nameWithType: MatrixFunctions.BasisMatrix
- uid: NeuralNetLearning.Internal.MatrixFunctions.GaussianOrthonormal(System.Int32,System.Int32)
  name: GaussianOrthonormal(Int32, Int32)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_GaussianOrthonormal_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.GaussianOrthonormal(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.GaussianOrthonormal(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.GaussianOrthonormal(Int32, Int32)
- uid: NeuralNetLearning.Internal.MatrixFunctions.GaussianOrthonormal*
  name: GaussianOrthonormal
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_GaussianOrthonormal_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.GaussianOrthonormal
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.GaussianOrthonormal
  nameWithType: MatrixFunctions.GaussianOrthonormal
- uid: NeuralNetLearning.Internal.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix{System.Double})
  name: IsFinite(Matrix<Double>)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_IsFinite_MathNet_Numerics_LinearAlgebra_Matrix_System_Double__
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix{System.Double})
  name.vb: IsFinite(Matrix(Of Double))
  fullName: NeuralNetLearning.Internal.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix<System.Double>)
  fullName.vb: NeuralNetLearning.Internal.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix(Of System.Double))
  nameWithType: MatrixFunctions.IsFinite(Matrix<Double>)
  nameWithType.vb: MatrixFunctions.IsFinite(Matrix(Of Double))
- uid: NeuralNetLearning.Internal.MatrixFunctions.IsFinite*
  name: IsFinite
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_IsFinite_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.IsFinite
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.IsFinite
  nameWithType: MatrixFunctions.IsFinite
- uid: NeuralNetLearning.Internal.MatrixFunctions.Read(System.String)
  name: Read(String)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_Read_System_String_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.Read(System.String)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.Read(System.String)
  nameWithType: MatrixFunctions.Read(String)
- uid: NeuralNetLearning.Internal.MatrixFunctions.Read*
  name: Read
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_Read_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.Read
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.Read
  nameWithType: MatrixFunctions.Read
- uid: NeuralNetLearning.Internal.MatrixFunctions.StdNormal(System.Int32,System.Int32)
  name: StdNormal(Int32, Int32)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_StdNormal_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.StdNormal(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.StdNormal(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.StdNormal(Int32, Int32)
- uid: NeuralNetLearning.Internal.MatrixFunctions.StdNormal*
  name: StdNormal
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_StdNormal_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.StdNormal
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.StdNormal
  nameWithType: MatrixFunctions.StdNormal
- uid: NeuralNetLearning.Internal.MatrixFunctions.StdUniform(System.Int32,System.Int32)
  name: StdUniform(Int32, Int32)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_StdUniform_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.StdUniform(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.StdUniform(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.StdUniform(Int32, Int32)
- uid: NeuralNetLearning.Internal.MatrixFunctions.StdUniform*
  name: StdUniform
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_StdUniform_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.StdUniform
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.StdUniform
  nameWithType: MatrixFunctions.StdUniform
- uid: NeuralNetLearning.Internal.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.String)
  name: Write(Matrix<Double>, String)
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_Write_MathNet_Numerics_LinearAlgebra_Matrix_System_Double__System_String_
  commentId: M:NeuralNetLearning.Internal.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.String)
  name.vb: Write(Matrix(Of Double), String)
  fullName: NeuralNetLearning.Internal.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix<System.Double>, System.String)
  fullName.vb: NeuralNetLearning.Internal.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix(Of System.Double), System.String)
  nameWithType: MatrixFunctions.Write(Matrix<Double>, String)
  nameWithType.vb: MatrixFunctions.Write(Matrix(Of Double), String)
- uid: NeuralNetLearning.Internal.MatrixFunctions.Write*
  name: Write
  href: api/NeuralNetLearning.Internal.MatrixFunctions.html#NeuralNetLearning_Internal_MatrixFunctions_Write_
  commentId: Overload:NeuralNetLearning.Internal.MatrixFunctions.Write
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.MatrixFunctions.Write
  nameWithType: MatrixFunctions.Write
- uid: NeuralNetLearning.Internal.Parameter
  name: Parameter
  href: api/NeuralNetLearning.Internal.Parameter.html
  commentId: T:NeuralNetLearning.Internal.Parameter
  fullName: NeuralNetLearning.Internal.Parameter
  nameWithType: Parameter
- uid: NeuralNetLearning.Internal.Parameter.#ctor(System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Matrix{System.Double}},System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}})
  name: Parameter(IEnumerable<Matrix<Double>>, IEnumerable<Vector<Double>>)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter__ctor_System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Matrix_System_Double___System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Vector_System_Double___
  commentId: M:NeuralNetLearning.Internal.Parameter.#ctor(System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Matrix{System.Double}},System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}})
  name.vb: Parameter(IEnumerable(Of Matrix(Of Double)), IEnumerable(Of Vector(Of Double)))
  fullName: NeuralNetLearning.Internal.Parameter.Parameter(System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Matrix<System.Double>>, System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Vector<System.Double>>)
  fullName.vb: NeuralNetLearning.Internal.Parameter.Parameter(System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Matrix(Of System.Double)), System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double)))
  nameWithType: Parameter.Parameter(IEnumerable<Matrix<Double>>, IEnumerable<Vector<Double>>)
  nameWithType.vb: Parameter.Parameter(IEnumerable(Of Matrix(Of Double)), IEnumerable(Of Vector(Of Double)))
- uid: NeuralNetLearning.Internal.Parameter.#ctor*
  name: Parameter
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter__ctor_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.Parameter
  nameWithType: Parameter.Parameter
- uid: NeuralNetLearning.Internal.Parameter.ActiveLayerCount
  name: ActiveLayerCount
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_ActiveLayerCount
  commentId: P:NeuralNetLearning.Internal.Parameter.ActiveLayerCount
  fullName: NeuralNetLearning.Internal.Parameter.ActiveLayerCount
  nameWithType: Parameter.ActiveLayerCount
- uid: NeuralNetLearning.Internal.Parameter.ActiveLayerCount*
  name: ActiveLayerCount
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_ActiveLayerCount_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.ActiveLayerCount
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.ActiveLayerCount
  nameWithType: Parameter.ActiveLayerCount
- uid: NeuralNetLearning.Internal.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Activations.Activation[],NeuralNetLearning.CostFunctions.CostFunction)
  name: CostGradient(Vector<Double>, Vector<Double>, Activation[], CostFunction)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_CostGradient_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__NeuralNetLearning_Activations_Activation___NeuralNetLearning_CostFunctions_CostFunction_
  commentId: M:NeuralNetLearning.Internal.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Activations.Activation[],NeuralNetLearning.CostFunctions.CostFunction)
  name.vb: CostGradient(Vector(Of Double), Vector(Of Double), Activation(), CostFunction)
  fullName: NeuralNetLearning.Internal.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>, NeuralNetLearning.Activations.Activation[], NeuralNetLearning.CostFunctions.CostFunction)
  fullName.vb: NeuralNetLearning.Internal.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), NeuralNetLearning.Activations.Activation(), NeuralNetLearning.CostFunctions.CostFunction)
  nameWithType: Parameter.CostGradient(Vector<Double>, Vector<Double>, Activation[], CostFunction)
  nameWithType.vb: Parameter.CostGradient(Vector(Of Double), Vector(Of Double), Activation(), CostFunction)
- uid: NeuralNetLearning.Internal.Parameter.CostGradient*
  name: CostGradient
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_CostGradient_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.CostGradient
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.CostGradient
  nameWithType: Parameter.CostGradient
- uid: NeuralNetLearning.Internal.Parameter.DeepCopy
  name: DeepCopy()
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_DeepCopy
  commentId: M:NeuralNetLearning.Internal.Parameter.DeepCopy
  fullName: NeuralNetLearning.Internal.Parameter.DeepCopy()
  nameWithType: Parameter.DeepCopy()
- uid: NeuralNetLearning.Internal.Parameter.DeepCopy*
  name: DeepCopy
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_DeepCopy_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.DeepCopy
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.DeepCopy
  nameWithType: Parameter.DeepCopy
- uid: NeuralNetLearning.Internal.Parameter.EntriesCount
  name: EntriesCount
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_EntriesCount
  commentId: P:NeuralNetLearning.Internal.Parameter.EntriesCount
  fullName: NeuralNetLearning.Internal.Parameter.EntriesCount
  nameWithType: Parameter.EntriesCount
- uid: NeuralNetLearning.Internal.Parameter.EntriesCount*
  name: EntriesCount
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_EntriesCount_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.EntriesCount
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.EntriesCount
  nameWithType: Parameter.EntriesCount
- uid: NeuralNetLearning.Internal.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Activations.Activation[])
  name: GetOutputVector(Vector<Double>, Activation[])
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_GetOutputVector_MathNet_Numerics_LinearAlgebra_Vector_System_Double__NeuralNetLearning_Activations_Activation___
  commentId: M:NeuralNetLearning.Internal.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Activations.Activation[])
  name.vb: GetOutputVector(Vector(Of Double), Activation())
  fullName: NeuralNetLearning.Internal.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, NeuralNetLearning.Activations.Activation[])
  fullName.vb: NeuralNetLearning.Internal.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), NeuralNetLearning.Activations.Activation())
  nameWithType: Parameter.GetOutputVector(Vector<Double>, Activation[])
  nameWithType.vb: Parameter.GetOutputVector(Vector(Of Double), Activation())
- uid: NeuralNetLearning.Internal.Parameter.GetOutputVector*
  name: GetOutputVector
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_GetOutputVector_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.GetOutputVector
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.GetOutputVector
  nameWithType: Parameter.GetOutputVector
- uid: NeuralNetLearning.Internal.Parameter.InPlaceAdd(NeuralNetLearning.Internal.Parameter)
  name: InPlaceAdd(Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceAdd_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceAdd(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceAdd(NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.InPlaceAdd(Parameter)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceAdd(System.Double)
  name: InPlaceAdd(Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceAdd_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceAdd(System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceAdd(System.Double)
  nameWithType: Parameter.InPlaceAdd(Double)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceAdd*
  name: InPlaceAdd
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceAdd_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.InPlaceAdd
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceAdd
  nameWithType: Parameter.InPlaceAdd
- uid: NeuralNetLearning.Internal.Parameter.InPlaceDivide(NeuralNetLearning.Internal.Parameter)
  name: InPlaceDivide(Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceDivide_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceDivide(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceDivide(NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.InPlaceDivide(Parameter)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceDivide(System.Double)
  name: InPlaceDivide(Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceDivide_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceDivide(System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceDivide(System.Double)
  nameWithType: Parameter.InPlaceDivide(Double)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceDivide*
  name: InPlaceDivide
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceDivide_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.InPlaceDivide
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceDivide
  nameWithType: Parameter.InPlaceDivide
- uid: NeuralNetLearning.Internal.Parameter.InPlaceMultiply(NeuralNetLearning.Internal.Parameter)
  name: InPlaceMultiply(Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceMultiply_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceMultiply(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceMultiply(NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.InPlaceMultiply(Parameter)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceMultiply(System.Double)
  name: InPlaceMultiply(Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceMultiply_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceMultiply(System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceMultiply(System.Double)
  nameWithType: Parameter.InPlaceMultiply(Double)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceMultiply*
  name: InPlaceMultiply
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceMultiply_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.InPlaceMultiply
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceMultiply
  nameWithType: Parameter.InPlaceMultiply
- uid: NeuralNetLearning.Internal.Parameter.InPlacePower(NeuralNetLearning.Internal.Parameter)
  name: InPlacePower(Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlacePower_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlacePower(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.InPlacePower(NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.InPlacePower(Parameter)
- uid: NeuralNetLearning.Internal.Parameter.InPlacePower(System.Double)
  name: InPlacePower(Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlacePower_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlacePower(System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.InPlacePower(System.Double)
  nameWithType: Parameter.InPlacePower(Double)
- uid: NeuralNetLearning.Internal.Parameter.InPlacePower*
  name: InPlacePower
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlacePower_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.InPlacePower
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.InPlacePower
  nameWithType: Parameter.InPlacePower
- uid: NeuralNetLearning.Internal.Parameter.InPlaceSubtract(NeuralNetLearning.Internal.Parameter)
  name: InPlaceSubtract(Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceSubtract_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceSubtract(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceSubtract(NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.InPlaceSubtract(Parameter)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceSubtract(System.Double)
  name: InPlaceSubtract(Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceSubtract_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.InPlaceSubtract(System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceSubtract(System.Double)
  nameWithType: Parameter.InPlaceSubtract(Double)
- uid: NeuralNetLearning.Internal.Parameter.InPlaceSubtract*
  name: InPlaceSubtract
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_InPlaceSubtract_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.InPlaceSubtract
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.InPlaceSubtract
  nameWithType: Parameter.InPlaceSubtract
- uid: NeuralNetLearning.Internal.Parameter.IsFinite
  name: IsFinite()
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_IsFinite
  commentId: M:NeuralNetLearning.Internal.Parameter.IsFinite
  fullName: NeuralNetLearning.Internal.Parameter.IsFinite()
  nameWithType: Parameter.IsFinite()
- uid: NeuralNetLearning.Internal.Parameter.IsFinite*
  name: IsFinite
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_IsFinite_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.IsFinite
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.IsFinite
  nameWithType: Parameter.IsFinite
- uid: NeuralNetLearning.Internal.Parameter.LayerSizes
  name: LayerSizes
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_LayerSizes
  commentId: P:NeuralNetLearning.Internal.Parameter.LayerSizes
  fullName: NeuralNetLearning.Internal.Parameter.LayerSizes
  nameWithType: Parameter.LayerSizes
- uid: NeuralNetLearning.Internal.Parameter.LayerSizes*
  name: LayerSizes
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_LayerSizes_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.LayerSizes
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.LayerSizes
  nameWithType: Parameter.LayerSizes
- uid: NeuralNetLearning.Internal.Parameter.op_Addition(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  name: Addition(Parameter, Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Addition_NeuralNetLearning_Internal_Parameter_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Addition(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.Addition(NeuralNetLearning.Internal.Parameter, NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.Addition(Parameter, Parameter)
- uid: NeuralNetLearning.Internal.Parameter.op_Addition(NeuralNetLearning.Internal.Parameter,System.Double)
  name: Addition(Parameter, Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Addition_NeuralNetLearning_Internal_Parameter_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Addition(NeuralNetLearning.Internal.Parameter,System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.Addition(NeuralNetLearning.Internal.Parameter, System.Double)
  nameWithType: Parameter.Addition(Parameter, Double)
- uid: NeuralNetLearning.Internal.Parameter.op_Addition*
  name: Addition
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Addition_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.op_Addition
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.Addition
  nameWithType: Parameter.Addition
- uid: NeuralNetLearning.Internal.Parameter.op_Division(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  name: Division(Parameter, Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Division_NeuralNetLearning_Internal_Parameter_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Division(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.Division(NeuralNetLearning.Internal.Parameter, NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.Division(Parameter, Parameter)
- uid: NeuralNetLearning.Internal.Parameter.op_Division(NeuralNetLearning.Internal.Parameter,System.Double)
  name: Division(Parameter, Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Division_NeuralNetLearning_Internal_Parameter_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Division(NeuralNetLearning.Internal.Parameter,System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.Division(NeuralNetLearning.Internal.Parameter, System.Double)
  nameWithType: Parameter.Division(Parameter, Double)
- uid: NeuralNetLearning.Internal.Parameter.op_Division*
  name: Division
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Division_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.op_Division
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.Division
  nameWithType: Parameter.Division
- uid: NeuralNetLearning.Internal.Parameter.op_Multiply(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  name: Multiply(Parameter, Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Multiply_NeuralNetLearning_Internal_Parameter_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Multiply(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.Multiply(NeuralNetLearning.Internal.Parameter, NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.Multiply(Parameter, Parameter)
- uid: NeuralNetLearning.Internal.Parameter.op_Multiply(System.Double,NeuralNetLearning.Internal.Parameter)
  name: Multiply(Double, Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Multiply_System_Double_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Multiply(System.Double,NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.Multiply(System.Double, NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.Multiply(Double, Parameter)
- uid: NeuralNetLearning.Internal.Parameter.op_Multiply*
  name: Multiply
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Multiply_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.op_Multiply
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.Multiply
  nameWithType: Parameter.Multiply
- uid: NeuralNetLearning.Internal.Parameter.op_Subtraction(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  name: Subtraction(Parameter, Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Subtraction_NeuralNetLearning_Internal_Parameter_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_Subtraction(NeuralNetLearning.Internal.Parameter,NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.Subtraction(NeuralNetLearning.Internal.Parameter, NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.Subtraction(Parameter, Parameter)
- uid: NeuralNetLearning.Internal.Parameter.op_Subtraction*
  name: Subtraction
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_Subtraction_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.op_Subtraction
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.Subtraction
  nameWithType: Parameter.Subtraction
- uid: NeuralNetLearning.Internal.Parameter.op_UnaryNegation(NeuralNetLearning.Internal.Parameter)
  name: UnaryNegation(Parameter)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_UnaryNegation_NeuralNetLearning_Internal_Parameter_
  commentId: M:NeuralNetLearning.Internal.Parameter.op_UnaryNegation(NeuralNetLearning.Internal.Parameter)
  fullName: NeuralNetLearning.Internal.Parameter.UnaryNegation(NeuralNetLearning.Internal.Parameter)
  nameWithType: Parameter.UnaryNegation(Parameter)
- uid: NeuralNetLearning.Internal.Parameter.op_UnaryNegation*
  name: UnaryNegation
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_op_UnaryNegation_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.op_UnaryNegation
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.UnaryNegation
  nameWithType: Parameter.UnaryNegation
- uid: NeuralNetLearning.Internal.Parameter.Pow(System.Double)
  name: Pow(Double)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_Pow_System_Double_
  commentId: M:NeuralNetLearning.Internal.Parameter.Pow(System.Double)
  fullName: NeuralNetLearning.Internal.Parameter.Pow(System.Double)
  nameWithType: Parameter.Pow(Double)
- uid: NeuralNetLearning.Internal.Parameter.Pow*
  name: Pow
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_Pow_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.Pow
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.Pow
  nameWithType: Parameter.Pow
- uid: NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate(NeuralNetLearning.Activations.Activation[],System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Double,System.Int32)
  name: SetWeightsUnivariate(Activation[], IEnumerable<Vector<Double>>, Double, Int32)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_SetWeightsUnivariate_NeuralNetLearning_Activations_Activation___System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Vector_System_Double___System_Double_System_Int32_
  commentId: M:NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate(NeuralNetLearning.Activations.Activation[],System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Double,System.Int32)
  name.vb: SetWeightsUnivariate(Activation(), IEnumerable(Of Vector(Of Double)), Double, Int32)
  fullName: NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate(NeuralNetLearning.Activations.Activation[], System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Vector<System.Double>>, System.Double, System.Int32)
  fullName.vb: NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate(NeuralNetLearning.Activations.Activation(), System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double)), System.Double, System.Int32)
  nameWithType: Parameter.SetWeightsUnivariate(Activation[], IEnumerable<Vector<Double>>, Double, Int32)
  nameWithType.vb: Parameter.SetWeightsUnivariate(Activation(), IEnumerable(Of Vector(Of Double)), Double, Int32)
- uid: NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate*
  name: SetWeightsUnivariate
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_SetWeightsUnivariate_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.SetWeightsUnivariate
  nameWithType: Parameter.SetWeightsUnivariate
- uid: NeuralNetLearning.Internal.Parameter.SquaredNorm
  name: SquaredNorm()
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_SquaredNorm
  commentId: M:NeuralNetLearning.Internal.Parameter.SquaredNorm
  fullName: NeuralNetLearning.Internal.Parameter.SquaredNorm()
  nameWithType: Parameter.SquaredNorm()
- uid: NeuralNetLearning.Internal.Parameter.SquaredNorm*
  name: SquaredNorm
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_SquaredNorm_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.SquaredNorm
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.SquaredNorm
  nameWithType: Parameter.SquaredNorm
- uid: NeuralNetLearning.Internal.Parameter.WriteToDirectory(System.String)
  name: WriteToDirectory(String)
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_WriteToDirectory_System_String_
  commentId: M:NeuralNetLearning.Internal.Parameter.WriteToDirectory(System.String)
  fullName: NeuralNetLearning.Internal.Parameter.WriteToDirectory(System.String)
  nameWithType: Parameter.WriteToDirectory(String)
- uid: NeuralNetLearning.Internal.Parameter.WriteToDirectory*
  name: WriteToDirectory
  href: api/NeuralNetLearning.Internal.Parameter.html#NeuralNetLearning_Internal_Parameter_WriteToDirectory_
  commentId: Overload:NeuralNetLearning.Internal.Parameter.WriteToDirectory
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.Parameter.WriteToDirectory
  nameWithType: Parameter.WriteToDirectory
- uid: NeuralNetLearning.Internal.VectorFunctions
  name: VectorFunctions
  href: api/NeuralNetLearning.Internal.VectorFunctions.html
  commentId: T:NeuralNetLearning.Internal.VectorFunctions
  fullName: NeuralNetLearning.Internal.VectorFunctions
  nameWithType: VectorFunctions
- uid: NeuralNetLearning.Internal.VectorFunctions.BasisVector(System.Int32,System.Int32)
  name: BasisVector(Int32, Int32)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_BasisVector_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.BasisVector(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Internal.VectorFunctions.BasisVector(System.Int32, System.Int32)
  nameWithType: VectorFunctions.BasisVector(Int32, Int32)
- uid: NeuralNetLearning.Internal.VectorFunctions.BasisVector*
  name: BasisVector
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_BasisVector_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.BasisVector
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.BasisVector
  nameWithType: VectorFunctions.BasisVector
- uid: NeuralNetLearning.Internal.VectorFunctions.BasisVectors(System.Int32)
  name: BasisVectors(Int32)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_BasisVectors_System_Int32_
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.BasisVectors(System.Int32)
  fullName: NeuralNetLearning.Internal.VectorFunctions.BasisVectors(System.Int32)
  nameWithType: VectorFunctions.BasisVectors(Int32)
- uid: NeuralNetLearning.Internal.VectorFunctions.BasisVectors*
  name: BasisVectors
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_BasisVectors_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.BasisVectors
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.BasisVectors
  nameWithType: VectorFunctions.BasisVectors
- uid: NeuralNetLearning.Internal.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: IsFinite(Vector<Double>)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_IsFinite_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: IsFinite(Vector(Of Double))
  fullName: NeuralNetLearning.Internal.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Internal.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: VectorFunctions.IsFinite(Vector<Double>)
  nameWithType.vb: VectorFunctions.IsFinite(Vector(Of Double))
- uid: NeuralNetLearning.Internal.VectorFunctions.IsFinite*
  name: IsFinite
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_IsFinite_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.IsFinite
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.IsFinite
  nameWithType: VectorFunctions.IsFinite
- uid: NeuralNetLearning.Internal.VectorFunctions.Read(System.String)
  name: Read(String)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_Read_System_String_
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.Read(System.String)
  fullName: NeuralNetLearning.Internal.VectorFunctions.Read(System.String)
  nameWithType: VectorFunctions.Read(String)
- uid: NeuralNetLearning.Internal.VectorFunctions.Read*
  name: Read
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_Read_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.Read
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.Read
  nameWithType: VectorFunctions.Read
- uid: NeuralNetLearning.Internal.VectorFunctions.StdNormal(System.Int32)
  name: StdNormal(Int32)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_StdNormal_System_Int32_
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.StdNormal(System.Int32)
  fullName: NeuralNetLearning.Internal.VectorFunctions.StdNormal(System.Int32)
  nameWithType: VectorFunctions.StdNormal(Int32)
- uid: NeuralNetLearning.Internal.VectorFunctions.StdNormal*
  name: StdNormal
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_StdNormal_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.StdNormal
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.StdNormal
  nameWithType: VectorFunctions.StdNormal
- uid: NeuralNetLearning.Internal.VectorFunctions.StdUniform(System.Int32)
  name: StdUniform(Int32)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_StdUniform_System_Int32_
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.StdUniform(System.Int32)
  fullName: NeuralNetLearning.Internal.VectorFunctions.StdUniform(System.Int32)
  nameWithType: VectorFunctions.StdUniform(Int32)
- uid: NeuralNetLearning.Internal.VectorFunctions.StdUniform*
  name: StdUniform
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_StdUniform_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.StdUniform
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.StdUniform
  nameWithType: VectorFunctions.StdUniform
- uid: NeuralNetLearning.Internal.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.String)
  name: Write(Vector<Double>, String)
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_Write_MathNet_Numerics_LinearAlgebra_Vector_System_Double__System_String_
  commentId: M:NeuralNetLearning.Internal.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.String)
  name.vb: Write(Vector(Of Double), String)
  fullName: NeuralNetLearning.Internal.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, System.String)
  fullName.vb: NeuralNetLearning.Internal.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), System.String)
  nameWithType: VectorFunctions.Write(Vector<Double>, String)
  nameWithType.vb: VectorFunctions.Write(Vector(Of Double), String)
- uid: NeuralNetLearning.Internal.VectorFunctions.Write*
  name: Write
  href: api/NeuralNetLearning.Internal.VectorFunctions.html#NeuralNetLearning_Internal_VectorFunctions_Write_
  commentId: Overload:NeuralNetLearning.Internal.VectorFunctions.Write
  isSpec: "True"
  fullName: NeuralNetLearning.Internal.VectorFunctions.Write
  nameWithType: VectorFunctions.Write
- uid: NeuralNetLearning.LayerConfig
  name: NeuralNetLearning.LayerConfig
  href: api/NeuralNetLearning.LayerConfig.html
  commentId: N:NeuralNetLearning.LayerConfig
  fullName: NeuralNetLearning.LayerConfig
  nameWithType: NeuralNetLearning.LayerConfig
- uid: NeuralNetLearning.LayerConfig.HiddenLayer
  name: HiddenLayer
  href: api/NeuralNetLearning.LayerConfig.HiddenLayer.html
  commentId: T:NeuralNetLearning.LayerConfig.HiddenLayer
  fullName: NeuralNetLearning.LayerConfig.HiddenLayer
  nameWithType: HiddenLayer
- uid: NeuralNetLearning.LayerConfig.HiddenLayer.#ctor(System.Int32,NeuralNetLearning.Activations.Activation)
  name: HiddenLayer(Int32, Activation)
  href: api/NeuralNetLearning.LayerConfig.HiddenLayer.html#NeuralNetLearning_LayerConfig_HiddenLayer__ctor_System_Int32_NeuralNetLearning_Activations_Activation_
  commentId: M:NeuralNetLearning.LayerConfig.HiddenLayer.#ctor(System.Int32,NeuralNetLearning.Activations.Activation)
  fullName: NeuralNetLearning.LayerConfig.HiddenLayer.HiddenLayer(System.Int32, NeuralNetLearning.Activations.Activation)
  nameWithType: HiddenLayer.HiddenLayer(Int32, Activation)
- uid: NeuralNetLearning.LayerConfig.HiddenLayer.#ctor*
  name: HiddenLayer
  href: api/NeuralNetLearning.LayerConfig.HiddenLayer.html#NeuralNetLearning_LayerConfig_HiddenLayer__ctor_
  commentId: Overload:NeuralNetLearning.LayerConfig.HiddenLayer.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.LayerConfig.HiddenLayer.HiddenLayer
  nameWithType: HiddenLayer.HiddenLayer
- uid: NeuralNetLearning.LayerConfig.HiddenLayer.Activation
  name: Activation
  href: api/NeuralNetLearning.LayerConfig.HiddenLayer.html#NeuralNetLearning_LayerConfig_HiddenLayer_Activation
  commentId: P:NeuralNetLearning.LayerConfig.HiddenLayer.Activation
  fullName: NeuralNetLearning.LayerConfig.HiddenLayer.Activation
  nameWithType: HiddenLayer.Activation
- uid: NeuralNetLearning.LayerConfig.HiddenLayer.Activation*
  name: Activation
  href: api/NeuralNetLearning.LayerConfig.HiddenLayer.html#NeuralNetLearning_LayerConfig_HiddenLayer_Activation_
  commentId: Overload:NeuralNetLearning.LayerConfig.HiddenLayer.Activation
  isSpec: "True"
  fullName: NeuralNetLearning.LayerConfig.HiddenLayer.Activation
  nameWithType: HiddenLayer.Activation
- uid: NeuralNetLearning.LayerConfig.InputLayer
  name: InputLayer
  href: api/NeuralNetLearning.LayerConfig.InputLayer.html
  commentId: T:NeuralNetLearning.LayerConfig.InputLayer
  fullName: NeuralNetLearning.LayerConfig.InputLayer
  nameWithType: InputLayer
- uid: NeuralNetLearning.LayerConfig.InputLayer.#ctor(System.Int32)
  name: InputLayer(Int32)
  href: api/NeuralNetLearning.LayerConfig.InputLayer.html#NeuralNetLearning_LayerConfig_InputLayer__ctor_System_Int32_
  commentId: M:NeuralNetLearning.LayerConfig.InputLayer.#ctor(System.Int32)
  fullName: NeuralNetLearning.LayerConfig.InputLayer.InputLayer(System.Int32)
  nameWithType: InputLayer.InputLayer(Int32)
- uid: NeuralNetLearning.LayerConfig.InputLayer.#ctor*
  name: InputLayer
  href: api/NeuralNetLearning.LayerConfig.InputLayer.html#NeuralNetLearning_LayerConfig_InputLayer__ctor_
  commentId: Overload:NeuralNetLearning.LayerConfig.InputLayer.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.LayerConfig.InputLayer.InputLayer
  nameWithType: InputLayer.InputLayer
- uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig
  name: NeuralLayerConfig
  href: api/NeuralNetLearning.LayerConfig.NeuralLayerConfig.html
  commentId: T:NeuralNetLearning.LayerConfig.NeuralLayerConfig
  fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig
  nameWithType: NeuralLayerConfig
- uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  name: Size
  href: api/NeuralNetLearning.LayerConfig.NeuralLayerConfig.html#NeuralNetLearning_LayerConfig_NeuralLayerConfig_Size
  commentId: P:NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  nameWithType: NeuralLayerConfig.Size
- uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size*
  name: Size
  href: api/NeuralNetLearning.LayerConfig.NeuralLayerConfig.html#NeuralNetLearning_LayerConfig_NeuralLayerConfig_Size_
  commentId: Overload:NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  isSpec: "True"
  fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  nameWithType: NeuralLayerConfig.Size
- uid: NeuralNetLearning.LayerConfig.OutputLayer
  name: OutputLayer
  href: api/NeuralNetLearning.LayerConfig.OutputLayer.html
  commentId: T:NeuralNetLearning.LayerConfig.OutputLayer
  fullName: NeuralNetLearning.LayerConfig.OutputLayer
  nameWithType: OutputLayer
- uid: NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32)
  name: OutputLayer(Int32)
  href: api/NeuralNetLearning.LayerConfig.OutputLayer.html#NeuralNetLearning_LayerConfig_OutputLayer__ctor_System_Int32_
  commentId: M:NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32)
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.OutputLayer(System.Int32)
  nameWithType: OutputLayer.OutputLayer(Int32)
- uid: NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32,NeuralNetLearning.Activations.Activation)
  name: OutputLayer(Int32, Activation)
  href: api/NeuralNetLearning.LayerConfig.OutputLayer.html#NeuralNetLearning_LayerConfig_OutputLayer__ctor_System_Int32_NeuralNetLearning_Activations_Activation_
  commentId: M:NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32,NeuralNetLearning.Activations.Activation)
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.OutputLayer(System.Int32, NeuralNetLearning.Activations.Activation)
  nameWithType: OutputLayer.OutputLayer(Int32, Activation)
- uid: NeuralNetLearning.LayerConfig.OutputLayer.#ctor*
  name: OutputLayer
  href: api/NeuralNetLearning.LayerConfig.OutputLayer.html#NeuralNetLearning_LayerConfig_OutputLayer__ctor_
  commentId: Overload:NeuralNetLearning.LayerConfig.OutputLayer.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.OutputLayer
  nameWithType: OutputLayer.OutputLayer
- uid: NeuralNetLearning.LayerConfig.OutputLayer.Activation
  name: Activation
  href: api/NeuralNetLearning.LayerConfig.OutputLayer.html#NeuralNetLearning_LayerConfig_OutputLayer_Activation
  commentId: P:NeuralNetLearning.LayerConfig.OutputLayer.Activation
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.Activation
  nameWithType: OutputLayer.Activation
- uid: NeuralNetLearning.LayerConfig.OutputLayer.Activation*
  name: Activation
  href: api/NeuralNetLearning.LayerConfig.OutputLayer.html#NeuralNetLearning_LayerConfig_OutputLayer_Activation_
  commentId: Overload:NeuralNetLearning.LayerConfig.OutputLayer.Activation
  isSpec: "True"
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.Activation
  nameWithType: OutputLayer.Activation
- uid: NeuralNetLearning.Maths
  name: NeuralNetLearning.Maths
  href: api/NeuralNetLearning.Maths.html
  commentId: N:NeuralNetLearning.Maths
  fullName: NeuralNetLearning.Maths
  nameWithType: NeuralNetLearning.Maths
- uid: NeuralNetLearning.Maths.Activations
  name: NeuralNetLearning.Maths.Activations
  href: api/NeuralNetLearning.Maths.Activations.html
  commentId: N:NeuralNetLearning.Maths.Activations
  fullName: NeuralNetLearning.Maths.Activations
  nameWithType: NeuralNetLearning.Maths.Activations
- uid: NeuralNetLearning.Maths.Activations.Activation
  name: Activation
  href: api/NeuralNetLearning.Maths.Activations.Activation.html
  commentId: T:NeuralNetLearning.Maths.Activations.Activation
  fullName: NeuralNetLearning.Maths.Activations.Activation
  nameWithType: Activation
- uid: NeuralNetLearning.Maths.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.Activation.html#NeuralNetLearning_Maths_Activations_Activation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.Activation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: Activation.Apply(Vector<Double>)
  nameWithType.vb: Activation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.Activation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.Activations.Activation.html#NeuralNetLearning_Maths_Activations_Activation_Apply_
  commentId: Overload:NeuralNetLearning.Maths.Activations.Activation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.Activation.Apply
  nameWithType: Activation.Apply
- uid: NeuralNetLearning.Maths.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.Activation.html#NeuralNetLearning_Maths_Activations_Activation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.Activation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: Activation.Derivative(Vector<Double>)
  nameWithType.vb: Activation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.Activation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.Activations.Activation.html#NeuralNetLearning_Maths_Activations_Activation_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.Activations.Activation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.Activation.Derivative
  nameWithType: Activation.Derivative
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation
  name: IdentityActivation
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html
  commentId: T:NeuralNetLearning.Maths.Activations.IdentityActivation
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation
  nameWithType: IdentityActivation
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation.#ctor
  name: IdentityActivation()
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html#NeuralNetLearning_Maths_Activations_IdentityActivation__ctor
  commentId: M:NeuralNetLearning.Maths.Activations.IdentityActivation.#ctor
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation.IdentityActivation()
  nameWithType: IdentityActivation.IdentityActivation()
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation.#ctor*
  name: IdentityActivation
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html#NeuralNetLearning_Maths_Activations_IdentityActivation__ctor_
  commentId: Overload:NeuralNetLearning.Maths.Activations.IdentityActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation.IdentityActivation
  nameWithType: IdentityActivation.IdentityActivation
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html#NeuralNetLearning_Maths_Activations_IdentityActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.IdentityActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: IdentityActivation.Apply(Vector<Double>)
  nameWithType.vb: IdentityActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html#NeuralNetLearning_Maths_Activations_IdentityActivation_Apply_
  commentId: Overload:NeuralNetLearning.Maths.Activations.IdentityActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation.Apply
  nameWithType: IdentityActivation.Apply
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html#NeuralNetLearning_Maths_Activations_IdentityActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: IdentityActivation.Derivative(Vector<Double>)
  nameWithType.vb: IdentityActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.Activations.IdentityActivation.html#NeuralNetLearning_Maths_Activations_IdentityActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.IdentityActivation.Derivative
  nameWithType: IdentityActivation.Derivative
- uid: NeuralNetLearning.Maths.Activations.ReluActivation
  name: ReluActivation
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html
  commentId: T:NeuralNetLearning.Maths.Activations.ReluActivation
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation
  nameWithType: ReluActivation
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.#ctor
  name: ReluActivation()
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation__ctor
  commentId: M:NeuralNetLearning.Maths.Activations.ReluActivation.#ctor
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.ReluActivation()
  nameWithType: ReluActivation.ReluActivation()
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.#ctor(System.Double)
  name: ReluActivation(Double)
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation__ctor_System_Double_
  commentId: M:NeuralNetLearning.Maths.Activations.ReluActivation.#ctor(System.Double)
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.ReluActivation(System.Double)
  nameWithType: ReluActivation.ReluActivation(Double)
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.#ctor*
  name: ReluActivation
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation__ctor_
  commentId: Overload:NeuralNetLearning.Maths.Activations.ReluActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.ReluActivation
  nameWithType: ReluActivation.ReluActivation
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.ReluActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: ReluActivation.Apply(Vector<Double>)
  nameWithType.vb: ReluActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation_Apply_
  commentId: Overload:NeuralNetLearning.Maths.Activations.ReluActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.Apply
  nameWithType: ReluActivation.Apply
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.ReluActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: ReluActivation.Derivative(Vector<Double>)
  nameWithType.vb: ReluActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.ReluActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.Activations.ReluActivation.html#NeuralNetLearning_Maths_Activations_ReluActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.Activations.ReluActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.ReluActivation.Derivative
  nameWithType: ReluActivation.Derivative
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation
  name: SoftmaxActivation
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html
  commentId: T:NeuralNetLearning.Maths.Activations.SoftmaxActivation
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation
  nameWithType: SoftmaxActivation
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation.#ctor
  name: SoftmaxActivation()
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html#NeuralNetLearning_Maths_Activations_SoftmaxActivation__ctor
  commentId: M:NeuralNetLearning.Maths.Activations.SoftmaxActivation.#ctor
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation.SoftmaxActivation()
  nameWithType: SoftmaxActivation.SoftmaxActivation()
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation.#ctor*
  name: SoftmaxActivation
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html#NeuralNetLearning_Maths_Activations_SoftmaxActivation__ctor_
  commentId: Overload:NeuralNetLearning.Maths.Activations.SoftmaxActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation.SoftmaxActivation
  nameWithType: SoftmaxActivation.SoftmaxActivation
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html#NeuralNetLearning_Maths_Activations_SoftmaxActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: SoftmaxActivation.Apply(Vector<Double>)
  nameWithType.vb: SoftmaxActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html#NeuralNetLearning_Maths_Activations_SoftmaxActivation_Apply_
  commentId: Overload:NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Apply
  nameWithType: SoftmaxActivation.Apply
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html#NeuralNetLearning_Maths_Activations_SoftmaxActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: SoftmaxActivation.Derivative(Vector<Double>)
  nameWithType.vb: SoftmaxActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.Activations.SoftmaxActivation.html#NeuralNetLearning_Maths_Activations_SoftmaxActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.SoftmaxActivation.Derivative
  nameWithType: SoftmaxActivation.Derivative
- uid: NeuralNetLearning.Maths.Activations.TanhActivation
  name: TanhActivation
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html
  commentId: T:NeuralNetLearning.Maths.Activations.TanhActivation
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation
  nameWithType: TanhActivation
- uid: NeuralNetLearning.Maths.Activations.TanhActivation.#ctor
  name: TanhActivation()
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html#NeuralNetLearning_Maths_Activations_TanhActivation__ctor
  commentId: M:NeuralNetLearning.Maths.Activations.TanhActivation.#ctor
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation.TanhActivation()
  nameWithType: TanhActivation.TanhActivation()
- uid: NeuralNetLearning.Maths.Activations.TanhActivation.#ctor*
  name: TanhActivation
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html#NeuralNetLearning_Maths_Activations_TanhActivation__ctor_
  commentId: Overload:NeuralNetLearning.Maths.Activations.TanhActivation.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation.TanhActivation
  nameWithType: TanhActivation.TanhActivation
- uid: NeuralNetLearning.Maths.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html#NeuralNetLearning_Maths_Activations_TanhActivation_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.TanhActivation.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: TanhActivation.Apply(Vector<Double>)
  nameWithType.vb: TanhActivation.Apply(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.TanhActivation.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html#NeuralNetLearning_Maths_Activations_TanhActivation_Apply_
  commentId: Overload:NeuralNetLearning.Maths.Activations.TanhActivation.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation.Apply
  nameWithType: TanhActivation.Apply
- uid: NeuralNetLearning.Maths.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>)
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html#NeuralNetLearning_Maths_Activations_TanhActivation_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.Activations.TanhActivation.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: TanhActivation.Derivative(Vector<Double>)
  nameWithType.vb: TanhActivation.Derivative(Vector(Of Double))
- uid: NeuralNetLearning.Maths.Activations.TanhActivation.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.Activations.TanhActivation.html#NeuralNetLearning_Maths_Activations_TanhActivation_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.Activations.TanhActivation.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Activations.TanhActivation.Derivative
  nameWithType: TanhActivation.Derivative
- uid: NeuralNetLearning.Maths.CostFunctions
  name: NeuralNetLearning.Maths.CostFunctions
  href: api/NeuralNetLearning.Maths.CostFunctions.html
  commentId: N:NeuralNetLearning.Maths.CostFunctions
  fullName: NeuralNetLearning.Maths.CostFunctions
  nameWithType: NeuralNetLearning.Maths.CostFunctions
- uid: NeuralNetLearning.Maths.CostFunctions.CostFunction
  name: CostFunction
  href: api/NeuralNetLearning.Maths.CostFunctions.CostFunction.html
  commentId: T:NeuralNetLearning.Maths.CostFunctions.CostFunction
  fullName: NeuralNetLearning.Maths.CostFunctions.CostFunction
  nameWithType: CostFunction
- uid: NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.CostFunction.html#NeuralNetLearning_Maths_CostFunctions_CostFunction_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CostFunction.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: CostFunction.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.CostFunctions.CostFunction.html#NeuralNetLearning_Maths_CostFunctions_CostFunction_Apply_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.CostFunction.Apply
  nameWithType: CostFunction.Apply
- uid: NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.CostFunction.html#NeuralNetLearning_Maths_CostFunctions_CostFunction_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CostFunction.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: CostFunction.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.CostFunctions.CostFunction.html#NeuralNetLearning_Maths_CostFunctions_CostFunction_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.CostFunction.Derivative
  nameWithType: CostFunction.Derivative
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost
  name: CrossEntropyCost
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html
  commentId: T:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost
  nameWithType: CrossEntropyCost
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.#ctor
  name: CrossEntropyCost()
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_Maths_CostFunctions_CrossEntropyCost__ctor
  commentId: M:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.#ctor
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.CrossEntropyCost()
  nameWithType: CrossEntropyCost.CrossEntropyCost()
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.#ctor*
  name: CrossEntropyCost
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_Maths_CostFunctions_CrossEntropyCost__ctor_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.CrossEntropyCost
  nameWithType: CrossEntropyCost.CrossEntropyCost
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_Maths_CostFunctions_CrossEntropyCost_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CrossEntropyCost.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: CrossEntropyCost.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_Maths_CostFunctions_CrossEntropyCost_Apply_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Apply
  nameWithType: CrossEntropyCost.Apply
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_Maths_CostFunctions_CrossEntropyCost_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: CrossEntropyCost.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: CrossEntropyCost.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.html#NeuralNetLearning_Maths_CostFunctions_CrossEntropyCost_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.CrossEntropyCost.Derivative
  nameWithType: CrossEntropyCost.Derivative
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost
  name: HuberCost
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html
  commentId: T:NeuralNetLearning.Maths.CostFunctions.HuberCost
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost
  nameWithType: HuberCost
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.#ctor
  name: HuberCost()
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost__ctor
  commentId: M:NeuralNetLearning.Maths.CostFunctions.HuberCost.#ctor
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.HuberCost()
  nameWithType: HuberCost.HuberCost()
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.#ctor(System.Double)
  name: HuberCost(Double)
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost__ctor_System_Double_
  commentId: M:NeuralNetLearning.Maths.CostFunctions.HuberCost.#ctor(System.Double)
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.HuberCost(System.Double)
  nameWithType: HuberCost.HuberCost(Double)
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.#ctor*
  name: HuberCost
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost__ctor_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.HuberCost.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.HuberCost
  nameWithType: HuberCost.HuberCost
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: HuberCost.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: HuberCost.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost_Apply_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.Apply
  nameWithType: HuberCost.Apply
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: HuberCost.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: HuberCost.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.CostFunctions.HuberCost.html#NeuralNetLearning_Maths_CostFunctions_HuberCost_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.HuberCost.Derivative
  nameWithType: HuberCost.Derivative
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost
  name: MSECost
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html
  commentId: T:NeuralNetLearning.Maths.CostFunctions.MSECost
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost
  nameWithType: MSECost
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost.#ctor
  name: MSECost()
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html#NeuralNetLearning_Maths_CostFunctions_MSECost__ctor
  commentId: M:NeuralNetLearning.Maths.CostFunctions.MSECost.#ctor
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost.MSECost()
  nameWithType: MSECost.MSECost()
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost.#ctor*
  name: MSECost
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html#NeuralNetLearning_Maths_CostFunctions_MSECost__ctor_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.MSECost.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost.MSECost
  nameWithType: MSECost.MSECost
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Apply(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html#NeuralNetLearning_Maths_CostFunctions_MSECost_Apply_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Apply(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.MSECost.Apply(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: MSECost.Apply(Vector<Double>, Vector<Double>)
  nameWithType.vb: MSECost.Apply(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost.Apply*
  name: Apply
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html#NeuralNetLearning_Maths_CostFunctions_MSECost_Apply_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.MSECost.Apply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost.Apply
  nameWithType: MSECost.Apply
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Derivative(Vector<Double>, Vector<Double>)
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html#NeuralNetLearning_Maths_CostFunctions_MSECost_Derivative_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Derivative(Vector(Of Double), Vector(Of Double))
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: MSECost.Derivative(Vector<Double>, Vector<Double>)
  nameWithType.vb: MSECost.Derivative(Vector(Of Double), Vector(Of Double))
- uid: NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative*
  name: Derivative
  href: api/NeuralNetLearning.Maths.CostFunctions.MSECost.html#NeuralNetLearning_Maths_CostFunctions_MSECost_Derivative_
  commentId: Overload:NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.CostFunctions.MSECost.Derivative
  nameWithType: MSECost.Derivative
- uid: NeuralNetLearning.Maths.GradientDescent
  name: NeuralNetLearning.Maths.GradientDescent
  href: api/NeuralNetLearning.Maths.GradientDescent.html
  commentId: N:NeuralNetLearning.Maths.GradientDescent
  fullName: NeuralNetLearning.Maths.GradientDescent
  nameWithType: NeuralNetLearning.Maths.GradientDescent
- uid: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender
  name: AdamGradientDescender
  href: api/NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.html
  commentId: T:NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender
  fullName: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender
  nameWithType: AdamGradientDescender
- uid: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.#ctor
  name: AdamGradientDescender()
  href: api/NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_AdamGradientDescender__ctor
  commentId: M:NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.#ctor
  fullName: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.AdamGradientDescender()
  nameWithType: AdamGradientDescender.AdamGradientDescender()
- uid: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double)
  name: AdamGradientDescender(Double, Double, Double)
  href: api/NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_AdamGradientDescender__ctor_System_Double_System_Double_System_Double_
  commentId: M:NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double)
  fullName: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.AdamGradientDescender(System.Double, System.Double, System.Double)
  nameWithType: AdamGradientDescender.AdamGradientDescender(Double, Double, Double)
- uid: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.#ctor*
  name: AdamGradientDescender
  href: api/NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_AdamGradientDescender__ctor_
  commentId: Overload:NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.AdamGradientDescender
  nameWithType: AdamGradientDescender.AdamGradientDescender
- uid: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  name: GradientDescentStep(Parameter)
  href: api/NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_AdamGradientDescender_GradientDescentStep_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  nameWithType: AdamGradientDescender.GradientDescentStep(Parameter)
- uid: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.GradientDescentStep*
  name: GradientDescentStep
  href: api/NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_AdamGradientDescender_GradientDescentStep_
  commentId: Overload:NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.GradientDescentStep
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.GradientDescent.AdamGradientDescender.GradientDescentStep
  nameWithType: AdamGradientDescender.GradientDescentStep
- uid: NeuralNetLearning.Maths.GradientDescent.GradientDescender
  name: GradientDescender
  href: api/NeuralNetLearning.Maths.GradientDescent.GradientDescender.html
  commentId: T:NeuralNetLearning.Maths.GradientDescent.GradientDescender
  fullName: NeuralNetLearning.Maths.GradientDescent.GradientDescender
  nameWithType: GradientDescender
- uid: NeuralNetLearning.Maths.GradientDescent.GradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  name: GradientDescentStep(Parameter)
  href: api/NeuralNetLearning.Maths.GradientDescent.GradientDescender.html#NeuralNetLearning_Maths_GradientDescent_GradientDescender_GradientDescentStep_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.GradientDescent.GradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.GradientDescent.GradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  nameWithType: GradientDescender.GradientDescentStep(Parameter)
- uid: NeuralNetLearning.Maths.GradientDescent.GradientDescender.GradientDescentStep*
  name: GradientDescentStep
  href: api/NeuralNetLearning.Maths.GradientDescent.GradientDescender.html#NeuralNetLearning_Maths_GradientDescent_GradientDescender_GradientDescentStep_
  commentId: Overload:NeuralNetLearning.Maths.GradientDescent.GradientDescender.GradientDescentStep
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.GradientDescent.GradientDescender.GradientDescentStep
  nameWithType: GradientDescender.GradientDescentStep
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender
  name: StochasticGradientDescender
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html
  commentId: T:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender
  nameWithType: StochasticGradientDescender
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.#ctor
  name: StochasticGradientDescender()
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender__ctor
  commentId: M:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.#ctor
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.StochasticGradientDescender()
  nameWithType: StochasticGradientDescender.StochasticGradientDescender()
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.#ctor(System.Double)
  name: StochasticGradientDescender(Double)
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender__ctor_System_Double_
  commentId: M:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.#ctor(System.Double)
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.StochasticGradientDescender(System.Double)
  nameWithType: StochasticGradientDescender.StochasticGradientDescender(Double)
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.#ctor*
  name: StochasticGradientDescender
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender__ctor_
  commentId: Overload:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.StochasticGradientDescender
  nameWithType: StochasticGradientDescender.StochasticGradientDescender
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  name: GradientDescentStep(Parameter)
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender_GradientDescentStep_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.GradientDescentStep(NeuralNetLearning.Maths.Parameter)
  nameWithType: StochasticGradientDescender.GradientDescentStep(Parameter)
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.GradientDescentStep*
  name: GradientDescentStep
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender_GradientDescentStep_
  commentId: Overload:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.GradientDescentStep
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.GradientDescentStep
  nameWithType: StochasticGradientDescender.GradientDescentStep
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.HyperParametersToLines
  name: HyperParametersToLines()
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender_HyperParametersToLines
  commentId: M:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.HyperParametersToLines
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.HyperParametersToLines()
  nameWithType: StochasticGradientDescender.HyperParametersToLines()
- uid: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.HyperParametersToLines*
  name: HyperParametersToLines
  href: api/NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.html#NeuralNetLearning_Maths_GradientDescent_StochasticGradientDescender_HyperParametersToLines_
  commentId: Overload:NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.HyperParametersToLines
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.GradientDescent.StochasticGradientDescender.HyperParametersToLines
  nameWithType: StochasticGradientDescender.HyperParametersToLines
- uid: NeuralNetLearning.Maths.MatrixFunctions
  name: MatrixFunctions
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html
  commentId: T:NeuralNetLearning.Maths.MatrixFunctions
  fullName: NeuralNetLearning.Maths.MatrixFunctions
  nameWithType: MatrixFunctions
- uid: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrices(System.Int32,System.Int32)
  name: BasisMatrices(Int32, Int32)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_BasisMatrices_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.BasisMatrices(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrices(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.BasisMatrices(Int32, Int32)
- uid: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrices*
  name: BasisMatrices
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_BasisMatrices_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.BasisMatrices
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrices
  nameWithType: MatrixFunctions.BasisMatrices
- uid: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrix(System.Int32,System.Int32,System.Int32,System.Int32)
  name: BasisMatrix(Int32, Int32, Int32, Int32)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_BasisMatrix_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.BasisMatrix(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrix(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: MatrixFunctions.BasisMatrix(Int32, Int32, Int32, Int32)
- uid: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrix*
  name: BasisMatrix
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_BasisMatrix_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.BasisMatrix
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.BasisMatrix
  nameWithType: MatrixFunctions.BasisMatrix
- uid: NeuralNetLearning.Maths.MatrixFunctions.GaussianOrthonormal(System.Int32,System.Int32)
  name: GaussianOrthonormal(Int32, Int32)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_GaussianOrthonormal_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.GaussianOrthonormal(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.GaussianOrthonormal(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.GaussianOrthonormal(Int32, Int32)
- uid: NeuralNetLearning.Maths.MatrixFunctions.GaussianOrthonormal*
  name: GaussianOrthonormal
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_GaussianOrthonormal_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.GaussianOrthonormal
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.GaussianOrthonormal
  nameWithType: MatrixFunctions.GaussianOrthonormal
- uid: NeuralNetLearning.Maths.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix{System.Double})
  name: IsFinite(Matrix<Double>)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_IsFinite_MathNet_Numerics_LinearAlgebra_Matrix_System_Double__
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix{System.Double})
  name.vb: IsFinite(Matrix(Of Double))
  fullName: NeuralNetLearning.Maths.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.MatrixFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Matrix(Of System.Double))
  nameWithType: MatrixFunctions.IsFinite(Matrix<Double>)
  nameWithType.vb: MatrixFunctions.IsFinite(Matrix(Of Double))
- uid: NeuralNetLearning.Maths.MatrixFunctions.IsFinite*
  name: IsFinite
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_IsFinite_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.IsFinite
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.IsFinite
  nameWithType: MatrixFunctions.IsFinite
- uid: NeuralNetLearning.Maths.MatrixFunctions.Read(System.String)
  name: Read(String)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_Read_System_String_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.Read(System.String)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.Read(System.String)
  nameWithType: MatrixFunctions.Read(String)
- uid: NeuralNetLearning.Maths.MatrixFunctions.Read*
  name: Read
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_Read_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.Read
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.Read
  nameWithType: MatrixFunctions.Read
- uid: NeuralNetLearning.Maths.MatrixFunctions.StdNormal(System.Int32,System.Int32)
  name: StdNormal(Int32, Int32)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_StdNormal_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.StdNormal(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.StdNormal(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.StdNormal(Int32, Int32)
- uid: NeuralNetLearning.Maths.MatrixFunctions.StdNormal*
  name: StdNormal
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_StdNormal_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.StdNormal
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.StdNormal
  nameWithType: MatrixFunctions.StdNormal
- uid: NeuralNetLearning.Maths.MatrixFunctions.StdUniform(System.Int32,System.Int32)
  name: StdUniform(Int32, Int32)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_StdUniform_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.StdUniform(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.StdUniform(System.Int32, System.Int32)
  nameWithType: MatrixFunctions.StdUniform(Int32, Int32)
- uid: NeuralNetLearning.Maths.MatrixFunctions.StdUniform*
  name: StdUniform
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_StdUniform_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.StdUniform
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.StdUniform
  nameWithType: MatrixFunctions.StdUniform
- uid: NeuralNetLearning.Maths.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.String)
  name: Write(Matrix<Double>, String)
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_Write_MathNet_Numerics_LinearAlgebra_Matrix_System_Double__System_String_
  commentId: M:NeuralNetLearning.Maths.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.String)
  name.vb: Write(Matrix(Of Double), String)
  fullName: NeuralNetLearning.Maths.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix<System.Double>, System.String)
  fullName.vb: NeuralNetLearning.Maths.MatrixFunctions.Write(MathNet.Numerics.LinearAlgebra.Matrix(Of System.Double), System.String)
  nameWithType: MatrixFunctions.Write(Matrix<Double>, String)
  nameWithType.vb: MatrixFunctions.Write(Matrix(Of Double), String)
- uid: NeuralNetLearning.Maths.MatrixFunctions.Write*
  name: Write
  href: api/NeuralNetLearning.Maths.MatrixFunctions.html#NeuralNetLearning_Maths_MatrixFunctions_Write_
  commentId: Overload:NeuralNetLearning.Maths.MatrixFunctions.Write
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.MatrixFunctions.Write
  nameWithType: MatrixFunctions.Write
- uid: NeuralNetLearning.Maths.Parameter
  name: Parameter
  href: api/NeuralNetLearning.Maths.Parameter.html
  commentId: T:NeuralNetLearning.Maths.Parameter
  fullName: NeuralNetLearning.Maths.Parameter
  nameWithType: Parameter
- uid: NeuralNetLearning.Maths.Parameter.#ctor(System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Matrix{System.Double}},System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}})
  name: Parameter(IEnumerable<Matrix<Double>>, IEnumerable<Vector<Double>>)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter__ctor_System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Matrix_System_Double___System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Vector_System_Double___
  commentId: M:NeuralNetLearning.Maths.Parameter.#ctor(System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Matrix{System.Double}},System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}})
  name.vb: Parameter(IEnumerable(Of Matrix(Of Double)), IEnumerable(Of Vector(Of Double)))
  fullName: NeuralNetLearning.Maths.Parameter.Parameter(System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Matrix<System.Double>>, System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Vector<System.Double>>)
  fullName.vb: NeuralNetLearning.Maths.Parameter.Parameter(System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Matrix(Of System.Double)), System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double)))
  nameWithType: Parameter.Parameter(IEnumerable<Matrix<Double>>, IEnumerable<Vector<Double>>)
  nameWithType.vb: Parameter.Parameter(IEnumerable(Of Matrix(Of Double)), IEnumerable(Of Vector(Of Double)))
- uid: NeuralNetLearning.Maths.Parameter.#ctor*
  name: Parameter
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter__ctor_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.Parameter
  nameWithType: Parameter.Parameter
- uid: NeuralNetLearning.Maths.Parameter.ActiveLayerCount
  name: ActiveLayerCount
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_ActiveLayerCount
  commentId: P:NeuralNetLearning.Maths.Parameter.ActiveLayerCount
  fullName: NeuralNetLearning.Maths.Parameter.ActiveLayerCount
  nameWithType: Parameter.ActiveLayerCount
- uid: NeuralNetLearning.Maths.Parameter.ActiveLayerCount*
  name: ActiveLayerCount
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_ActiveLayerCount_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.ActiveLayerCount
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.ActiveLayerCount
  nameWithType: Parameter.ActiveLayerCount
- uid: NeuralNetLearning.Maths.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Maths.Activations.Activation[],NeuralNetLearning.Maths.CostFunctions.CostFunction)
  name: CostGradient(Vector<Double>, Vector<Double>, Activation[], CostFunction)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_CostGradient_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double__NeuralNetLearning_Maths_Activations_Activation___NeuralNetLearning_Maths_CostFunctions_CostFunction_
  commentId: M:NeuralNetLearning.Maths.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Maths.Activations.Activation[],NeuralNetLearning.Maths.CostFunctions.CostFunction)
  name.vb: CostGradient(Vector(Of Double), Vector(Of Double), Activation(), CostFunction)
  fullName: NeuralNetLearning.Maths.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>, NeuralNetLearning.Maths.Activations.Activation[], NeuralNetLearning.Maths.CostFunctions.CostFunction)
  fullName.vb: NeuralNetLearning.Maths.Parameter.CostGradient(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), NeuralNetLearning.Maths.Activations.Activation(), NeuralNetLearning.Maths.CostFunctions.CostFunction)
  nameWithType: Parameter.CostGradient(Vector<Double>, Vector<Double>, Activation[], CostFunction)
  nameWithType.vb: Parameter.CostGradient(Vector(Of Double), Vector(Of Double), Activation(), CostFunction)
- uid: NeuralNetLearning.Maths.Parameter.CostGradient*
  name: CostGradient
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_CostGradient_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.CostGradient
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.CostGradient
  nameWithType: Parameter.CostGradient
- uid: NeuralNetLearning.Maths.Parameter.DeepCopy
  name: DeepCopy()
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_DeepCopy
  commentId: M:NeuralNetLearning.Maths.Parameter.DeepCopy
  fullName: NeuralNetLearning.Maths.Parameter.DeepCopy()
  nameWithType: Parameter.DeepCopy()
- uid: NeuralNetLearning.Maths.Parameter.DeepCopy*
  name: DeepCopy
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_DeepCopy_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.DeepCopy
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.DeepCopy
  nameWithType: Parameter.DeepCopy
- uid: NeuralNetLearning.Maths.Parameter.EntriesCount
  name: EntriesCount
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_EntriesCount
  commentId: P:NeuralNetLearning.Maths.Parameter.EntriesCount
  fullName: NeuralNetLearning.Maths.Parameter.EntriesCount
  nameWithType: Parameter.EntriesCount
- uid: NeuralNetLearning.Maths.Parameter.EntriesCount*
  name: EntriesCount
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_EntriesCount_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.EntriesCount
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.EntriesCount
  nameWithType: Parameter.EntriesCount
- uid: NeuralNetLearning.Maths.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Maths.Activations.Activation[])
  name: GetOutputVector(Vector<Double>, Activation[])
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_GetOutputVector_MathNet_Numerics_LinearAlgebra_Vector_System_Double__NeuralNetLearning_Maths_Activations_Activation___
  commentId: M:NeuralNetLearning.Maths.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector{System.Double},NeuralNetLearning.Maths.Activations.Activation[])
  name.vb: GetOutputVector(Vector(Of Double), Activation())
  fullName: NeuralNetLearning.Maths.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, NeuralNetLearning.Maths.Activations.Activation[])
  fullName.vb: NeuralNetLearning.Maths.Parameter.GetOutputVector(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), NeuralNetLearning.Maths.Activations.Activation())
  nameWithType: Parameter.GetOutputVector(Vector<Double>, Activation[])
  nameWithType.vb: Parameter.GetOutputVector(Vector(Of Double), Activation())
- uid: NeuralNetLearning.Maths.Parameter.GetOutputVector*
  name: GetOutputVector
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_GetOutputVector_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.GetOutputVector
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.GetOutputVector
  nameWithType: Parameter.GetOutputVector
- uid: NeuralNetLearning.Maths.Parameter.InPlaceAdd(NeuralNetLearning.Maths.Parameter)
  name: InPlaceAdd(Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceAdd_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceAdd(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceAdd(NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.InPlaceAdd(Parameter)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceAdd(System.Double)
  name: InPlaceAdd(Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceAdd_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceAdd(System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceAdd(System.Double)
  nameWithType: Parameter.InPlaceAdd(Double)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceAdd*
  name: InPlaceAdd
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceAdd_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.InPlaceAdd
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceAdd
  nameWithType: Parameter.InPlaceAdd
- uid: NeuralNetLearning.Maths.Parameter.InPlaceDivide(NeuralNetLearning.Maths.Parameter)
  name: InPlaceDivide(Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceDivide_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceDivide(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceDivide(NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.InPlaceDivide(Parameter)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceDivide(System.Double)
  name: InPlaceDivide(Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceDivide_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceDivide(System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceDivide(System.Double)
  nameWithType: Parameter.InPlaceDivide(Double)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceDivide*
  name: InPlaceDivide
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceDivide_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.InPlaceDivide
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceDivide
  nameWithType: Parameter.InPlaceDivide
- uid: NeuralNetLearning.Maths.Parameter.InPlaceMultiply(NeuralNetLearning.Maths.Parameter)
  name: InPlaceMultiply(Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceMultiply_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceMultiply(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceMultiply(NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.InPlaceMultiply(Parameter)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceMultiply(System.Double)
  name: InPlaceMultiply(Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceMultiply_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceMultiply(System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceMultiply(System.Double)
  nameWithType: Parameter.InPlaceMultiply(Double)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceMultiply*
  name: InPlaceMultiply
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceMultiply_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.InPlaceMultiply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceMultiply
  nameWithType: Parameter.InPlaceMultiply
- uid: NeuralNetLearning.Maths.Parameter.InPlacePower(NeuralNetLearning.Maths.Parameter)
  name: InPlacePower(Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlacePower_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlacePower(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.InPlacePower(NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.InPlacePower(Parameter)
- uid: NeuralNetLearning.Maths.Parameter.InPlacePower(System.Double)
  name: InPlacePower(Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlacePower_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlacePower(System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.InPlacePower(System.Double)
  nameWithType: Parameter.InPlacePower(Double)
- uid: NeuralNetLearning.Maths.Parameter.InPlacePower*
  name: InPlacePower
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlacePower_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.InPlacePower
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.InPlacePower
  nameWithType: Parameter.InPlacePower
- uid: NeuralNetLearning.Maths.Parameter.InPlaceSubtract(NeuralNetLearning.Maths.Parameter)
  name: InPlaceSubtract(Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceSubtract_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceSubtract(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceSubtract(NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.InPlaceSubtract(Parameter)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceSubtract(System.Double)
  name: InPlaceSubtract(Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceSubtract_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.InPlaceSubtract(System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceSubtract(System.Double)
  nameWithType: Parameter.InPlaceSubtract(Double)
- uid: NeuralNetLearning.Maths.Parameter.InPlaceSubtract*
  name: InPlaceSubtract
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_InPlaceSubtract_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.InPlaceSubtract
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.InPlaceSubtract
  nameWithType: Parameter.InPlaceSubtract
- uid: NeuralNetLearning.Maths.Parameter.IsFinite
  name: IsFinite()
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_IsFinite
  commentId: M:NeuralNetLearning.Maths.Parameter.IsFinite
  fullName: NeuralNetLearning.Maths.Parameter.IsFinite()
  nameWithType: Parameter.IsFinite()
- uid: NeuralNetLearning.Maths.Parameter.IsFinite*
  name: IsFinite
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_IsFinite_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.IsFinite
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.IsFinite
  nameWithType: Parameter.IsFinite
- uid: NeuralNetLearning.Maths.Parameter.LayerSizes
  name: LayerSizes
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_LayerSizes
  commentId: P:NeuralNetLearning.Maths.Parameter.LayerSizes
  fullName: NeuralNetLearning.Maths.Parameter.LayerSizes
  nameWithType: Parameter.LayerSizes
- uid: NeuralNetLearning.Maths.Parameter.LayerSizes*
  name: LayerSizes
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_LayerSizes_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.LayerSizes
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.LayerSizes
  nameWithType: Parameter.LayerSizes
- uid: NeuralNetLearning.Maths.Parameter.op_Addition(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  name: Addition(Parameter, Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Addition_NeuralNetLearning_Maths_Parameter_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Addition(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.Addition(NeuralNetLearning.Maths.Parameter, NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.Addition(Parameter, Parameter)
- uid: NeuralNetLearning.Maths.Parameter.op_Addition(NeuralNetLearning.Maths.Parameter,System.Double)
  name: Addition(Parameter, Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Addition_NeuralNetLearning_Maths_Parameter_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Addition(NeuralNetLearning.Maths.Parameter,System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.Addition(NeuralNetLearning.Maths.Parameter, System.Double)
  nameWithType: Parameter.Addition(Parameter, Double)
- uid: NeuralNetLearning.Maths.Parameter.op_Addition*
  name: Addition
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Addition_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.op_Addition
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.Addition
  nameWithType: Parameter.Addition
- uid: NeuralNetLearning.Maths.Parameter.op_Division(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  name: Division(Parameter, Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Division_NeuralNetLearning_Maths_Parameter_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Division(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.Division(NeuralNetLearning.Maths.Parameter, NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.Division(Parameter, Parameter)
- uid: NeuralNetLearning.Maths.Parameter.op_Division(NeuralNetLearning.Maths.Parameter,System.Double)
  name: Division(Parameter, Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Division_NeuralNetLearning_Maths_Parameter_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Division(NeuralNetLearning.Maths.Parameter,System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.Division(NeuralNetLearning.Maths.Parameter, System.Double)
  nameWithType: Parameter.Division(Parameter, Double)
- uid: NeuralNetLearning.Maths.Parameter.op_Division*
  name: Division
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Division_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.op_Division
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.Division
  nameWithType: Parameter.Division
- uid: NeuralNetLearning.Maths.Parameter.op_Multiply(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  name: Multiply(Parameter, Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Multiply_NeuralNetLearning_Maths_Parameter_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Multiply(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.Multiply(NeuralNetLearning.Maths.Parameter, NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.Multiply(Parameter, Parameter)
- uid: NeuralNetLearning.Maths.Parameter.op_Multiply(System.Double,NeuralNetLearning.Maths.Parameter)
  name: Multiply(Double, Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Multiply_System_Double_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Multiply(System.Double,NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.Multiply(System.Double, NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.Multiply(Double, Parameter)
- uid: NeuralNetLearning.Maths.Parameter.op_Multiply*
  name: Multiply
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Multiply_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.op_Multiply
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.Multiply
  nameWithType: Parameter.Multiply
- uid: NeuralNetLearning.Maths.Parameter.op_Subtraction(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  name: Subtraction(Parameter, Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Subtraction_NeuralNetLearning_Maths_Parameter_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_Subtraction(NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.Subtraction(NeuralNetLearning.Maths.Parameter, NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.Subtraction(Parameter, Parameter)
- uid: NeuralNetLearning.Maths.Parameter.op_Subtraction*
  name: Subtraction
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_Subtraction_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.op_Subtraction
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.Subtraction
  nameWithType: Parameter.Subtraction
- uid: NeuralNetLearning.Maths.Parameter.op_UnaryNegation(NeuralNetLearning.Maths.Parameter)
  name: UnaryNegation(Parameter)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_UnaryNegation_NeuralNetLearning_Maths_Parameter_
  commentId: M:NeuralNetLearning.Maths.Parameter.op_UnaryNegation(NeuralNetLearning.Maths.Parameter)
  fullName: NeuralNetLearning.Maths.Parameter.UnaryNegation(NeuralNetLearning.Maths.Parameter)
  nameWithType: Parameter.UnaryNegation(Parameter)
- uid: NeuralNetLearning.Maths.Parameter.op_UnaryNegation*
  name: UnaryNegation
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_op_UnaryNegation_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.op_UnaryNegation
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.UnaryNegation
  nameWithType: Parameter.UnaryNegation
- uid: NeuralNetLearning.Maths.Parameter.Pow(System.Double)
  name: Pow(Double)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_Pow_System_Double_
  commentId: M:NeuralNetLearning.Maths.Parameter.Pow(System.Double)
  fullName: NeuralNetLearning.Maths.Parameter.Pow(System.Double)
  nameWithType: Parameter.Pow(Double)
- uid: NeuralNetLearning.Maths.Parameter.Pow*
  name: Pow
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_Pow_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.Pow
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.Pow
  nameWithType: Parameter.Pow
- uid: NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate(NeuralNetLearning.Maths.Activations.Activation[],System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Double,System.Int32)
  name: SetWeightsUnivariate(Activation[], IEnumerable<Vector<Double>>, Double, Int32)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_SetWeightsUnivariate_NeuralNetLearning_Maths_Activations_Activation___System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Vector_System_Double___System_Double_System_Int32_
  commentId: M:NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate(NeuralNetLearning.Maths.Activations.Activation[],System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Double,System.Int32)
  name.vb: SetWeightsUnivariate(Activation(), IEnumerable(Of Vector(Of Double)), Double, Int32)
  fullName: NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate(NeuralNetLearning.Maths.Activations.Activation[], System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Vector<System.Double>>, System.Double, System.Int32)
  fullName.vb: NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate(NeuralNetLearning.Maths.Activations.Activation(), System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double)), System.Double, System.Int32)
  nameWithType: Parameter.SetWeightsUnivariate(Activation[], IEnumerable<Vector<Double>>, Double, Int32)
  nameWithType.vb: Parameter.SetWeightsUnivariate(Activation(), IEnumerable(Of Vector(Of Double)), Double, Int32)
- uid: NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate*
  name: SetWeightsUnivariate
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_SetWeightsUnivariate_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.SetWeightsUnivariate
  nameWithType: Parameter.SetWeightsUnivariate
- uid: NeuralNetLearning.Maths.Parameter.SquaredNorm
  name: SquaredNorm()
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_SquaredNorm
  commentId: M:NeuralNetLearning.Maths.Parameter.SquaredNorm
  fullName: NeuralNetLearning.Maths.Parameter.SquaredNorm()
  nameWithType: Parameter.SquaredNorm()
- uid: NeuralNetLearning.Maths.Parameter.SquaredNorm*
  name: SquaredNorm
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_SquaredNorm_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.SquaredNorm
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.SquaredNorm
  nameWithType: Parameter.SquaredNorm
- uid: NeuralNetLearning.Maths.Parameter.WriteToDirectory(System.String)
  name: WriteToDirectory(String)
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_WriteToDirectory_System_String_
  commentId: M:NeuralNetLearning.Maths.Parameter.WriteToDirectory(System.String)
  fullName: NeuralNetLearning.Maths.Parameter.WriteToDirectory(System.String)
  nameWithType: Parameter.WriteToDirectory(String)
- uid: NeuralNetLearning.Maths.Parameter.WriteToDirectory*
  name: WriteToDirectory
  href: api/NeuralNetLearning.Maths.Parameter.html#NeuralNetLearning_Maths_Parameter_WriteToDirectory_
  commentId: Overload:NeuralNetLearning.Maths.Parameter.WriteToDirectory
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.Parameter.WriteToDirectory
  nameWithType: Parameter.WriteToDirectory
- uid: NeuralNetLearning.Maths.ParameterFactory
  name: ParameterFactory
  href: api/NeuralNetLearning.Maths.ParameterFactory.html
  commentId: T:NeuralNetLearning.Maths.ParameterFactory
  fullName: NeuralNetLearning.Maths.ParameterFactory
  nameWithType: ParameterFactory
- uid: NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal(System.Int32[])
  name: GaussianOrthonormal(Int32[])
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_GaussianOrthonormal_System_Int32___
  commentId: M:NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal(System.Int32[])
  name.vb: GaussianOrthonormal(Int32())
  fullName: NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal(System.Int32[])
  fullName.vb: NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal(System.Int32())
  nameWithType: ParameterFactory.GaussianOrthonormal(Int32[])
  nameWithType.vb: ParameterFactory.GaussianOrthonormal(Int32())
- uid: NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal*
  name: GaussianOrthonormal
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_GaussianOrthonormal_
  commentId: Overload:NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.ParameterFactory.GaussianOrthonormal
  nameWithType: ParameterFactory.GaussianOrthonormal
- uid: NeuralNetLearning.Maths.ParameterFactory.KaimingInit(System.Int32[])
  name: KaimingInit(Int32[])
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_KaimingInit_System_Int32___
  commentId: M:NeuralNetLearning.Maths.ParameterFactory.KaimingInit(System.Int32[])
  name.vb: KaimingInit(Int32())
  fullName: NeuralNetLearning.Maths.ParameterFactory.KaimingInit(System.Int32[])
  fullName.vb: NeuralNetLearning.Maths.ParameterFactory.KaimingInit(System.Int32())
  nameWithType: ParameterFactory.KaimingInit(Int32[])
  nameWithType.vb: ParameterFactory.KaimingInit(Int32())
- uid: NeuralNetLearning.Maths.ParameterFactory.KaimingInit*
  name: KaimingInit
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_KaimingInit_
  commentId: Overload:NeuralNetLearning.Maths.ParameterFactory.KaimingInit
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.ParameterFactory.KaimingInit
  nameWithType: ParameterFactory.KaimingInit
- uid: NeuralNetLearning.Maths.ParameterFactory.LSUVInit(System.Int32[],NeuralNetLearning.Maths.Activations.Activation[],System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Double,System.Int32)
  name: LSUVInit(Int32[], Activation[], IEnumerable<Vector<Double>>, Double, Int32)
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_LSUVInit_System_Int32___NeuralNetLearning_Maths_Activations_Activation___System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Vector_System_Double___System_Double_System_Int32_
  commentId: M:NeuralNetLearning.Maths.ParameterFactory.LSUVInit(System.Int32[],NeuralNetLearning.Maths.Activations.Activation[],System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Double,System.Int32)
  name.vb: LSUVInit(Int32(), Activation(), IEnumerable(Of Vector(Of Double)), Double, Int32)
  fullName: NeuralNetLearning.Maths.ParameterFactory.LSUVInit(System.Int32[], NeuralNetLearning.Maths.Activations.Activation[], System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Vector<System.Double>>, System.Double, System.Int32)
  fullName.vb: NeuralNetLearning.Maths.ParameterFactory.LSUVInit(System.Int32(), NeuralNetLearning.Maths.Activations.Activation(), System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double)), System.Double, System.Int32)
  nameWithType: ParameterFactory.LSUVInit(Int32[], Activation[], IEnumerable<Vector<Double>>, Double, Int32)
  nameWithType.vb: ParameterFactory.LSUVInit(Int32(), Activation(), IEnumerable(Of Vector(Of Double)), Double, Int32)
- uid: NeuralNetLearning.Maths.ParameterFactory.LSUVInit*
  name: LSUVInit
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_LSUVInit_
  commentId: Overload:NeuralNetLearning.Maths.ParameterFactory.LSUVInit
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.ParameterFactory.LSUVInit
  nameWithType: ParameterFactory.LSUVInit
- uid: NeuralNetLearning.Maths.ParameterFactory.ReadFromDirectory(System.String)
  name: ReadFromDirectory(String)
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_ReadFromDirectory_System_String_
  commentId: M:NeuralNetLearning.Maths.ParameterFactory.ReadFromDirectory(System.String)
  fullName: NeuralNetLearning.Maths.ParameterFactory.ReadFromDirectory(System.String)
  nameWithType: ParameterFactory.ReadFromDirectory(String)
- uid: NeuralNetLearning.Maths.ParameterFactory.ReadFromDirectory*
  name: ReadFromDirectory
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_ReadFromDirectory_
  commentId: Overload:NeuralNetLearning.Maths.ParameterFactory.ReadFromDirectory
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.ParameterFactory.ReadFromDirectory
  nameWithType: ParameterFactory.ReadFromDirectory
- uid: NeuralNetLearning.Maths.ParameterFactory.XavierInit(System.Int32[])
  name: XavierInit(Int32[])
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_XavierInit_System_Int32___
  commentId: M:NeuralNetLearning.Maths.ParameterFactory.XavierInit(System.Int32[])
  name.vb: XavierInit(Int32())
  fullName: NeuralNetLearning.Maths.ParameterFactory.XavierInit(System.Int32[])
  fullName.vb: NeuralNetLearning.Maths.ParameterFactory.XavierInit(System.Int32())
  nameWithType: ParameterFactory.XavierInit(Int32[])
  nameWithType.vb: ParameterFactory.XavierInit(Int32())
- uid: NeuralNetLearning.Maths.ParameterFactory.XavierInit*
  name: XavierInit
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_XavierInit_
  commentId: Overload:NeuralNetLearning.Maths.ParameterFactory.XavierInit
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.ParameterFactory.XavierInit
  nameWithType: ParameterFactory.XavierInit
- uid: NeuralNetLearning.Maths.ParameterFactory.Zero(System.Int32[])
  name: Zero(Int32[])
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_Zero_System_Int32___
  commentId: M:NeuralNetLearning.Maths.ParameterFactory.Zero(System.Int32[])
  name.vb: Zero(Int32())
  fullName: NeuralNetLearning.Maths.ParameterFactory.Zero(System.Int32[])
  fullName.vb: NeuralNetLearning.Maths.ParameterFactory.Zero(System.Int32())
  nameWithType: ParameterFactory.Zero(Int32[])
  nameWithType.vb: ParameterFactory.Zero(Int32())
- uid: NeuralNetLearning.Maths.ParameterFactory.Zero*
  name: Zero
  href: api/NeuralNetLearning.Maths.ParameterFactory.html#NeuralNetLearning_Maths_ParameterFactory_Zero_
  commentId: Overload:NeuralNetLearning.Maths.ParameterFactory.Zero
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.ParameterFactory.Zero
  nameWithType: ParameterFactory.Zero
- uid: NeuralNetLearning.Maths.VectorFunctions
  name: VectorFunctions
  href: api/NeuralNetLearning.Maths.VectorFunctions.html
  commentId: T:NeuralNetLearning.Maths.VectorFunctions
  fullName: NeuralNetLearning.Maths.VectorFunctions
  nameWithType: VectorFunctions
- uid: NeuralNetLearning.Maths.VectorFunctions.BasisVector(System.Int32,System.Int32)
  name: BasisVector(Int32, Int32)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_BasisVector_System_Int32_System_Int32_
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.BasisVector(System.Int32,System.Int32)
  fullName: NeuralNetLearning.Maths.VectorFunctions.BasisVector(System.Int32, System.Int32)
  nameWithType: VectorFunctions.BasisVector(Int32, Int32)
- uid: NeuralNetLearning.Maths.VectorFunctions.BasisVector*
  name: BasisVector
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_BasisVector_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.BasisVector
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.BasisVector
  nameWithType: VectorFunctions.BasisVector
- uid: NeuralNetLearning.Maths.VectorFunctions.BasisVectors(System.Int32)
  name: BasisVectors(Int32)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_BasisVectors_System_Int32_
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.BasisVectors(System.Int32)
  fullName: NeuralNetLearning.Maths.VectorFunctions.BasisVectors(System.Int32)
  nameWithType: VectorFunctions.BasisVectors(Int32)
- uid: NeuralNetLearning.Maths.VectorFunctions.BasisVectors*
  name: BasisVectors
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_BasisVectors_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.BasisVectors
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.BasisVectors
  nameWithType: VectorFunctions.BasisVectors
- uid: NeuralNetLearning.Maths.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: IsFinite(Vector<Double>)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_IsFinite_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: IsFinite(Vector(Of Double))
  fullName: NeuralNetLearning.Maths.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.Maths.VectorFunctions.IsFinite(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: VectorFunctions.IsFinite(Vector<Double>)
  nameWithType.vb: VectorFunctions.IsFinite(Vector(Of Double))
- uid: NeuralNetLearning.Maths.VectorFunctions.IsFinite*
  name: IsFinite
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_IsFinite_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.IsFinite
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.IsFinite
  nameWithType: VectorFunctions.IsFinite
- uid: NeuralNetLearning.Maths.VectorFunctions.Read(System.String)
  name: Read(String)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_Read_System_String_
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.Read(System.String)
  fullName: NeuralNetLearning.Maths.VectorFunctions.Read(System.String)
  nameWithType: VectorFunctions.Read(String)
- uid: NeuralNetLearning.Maths.VectorFunctions.Read*
  name: Read
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_Read_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.Read
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.Read
  nameWithType: VectorFunctions.Read
- uid: NeuralNetLearning.Maths.VectorFunctions.StdNormal(System.Int32)
  name: StdNormal(Int32)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_StdNormal_System_Int32_
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.StdNormal(System.Int32)
  fullName: NeuralNetLearning.Maths.VectorFunctions.StdNormal(System.Int32)
  nameWithType: VectorFunctions.StdNormal(Int32)
- uid: NeuralNetLearning.Maths.VectorFunctions.StdNormal*
  name: StdNormal
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_StdNormal_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.StdNormal
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.StdNormal
  nameWithType: VectorFunctions.StdNormal
- uid: NeuralNetLearning.Maths.VectorFunctions.StdUniform(System.Int32)
  name: StdUniform(Int32)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_StdUniform_System_Int32_
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.StdUniform(System.Int32)
  fullName: NeuralNetLearning.Maths.VectorFunctions.StdUniform(System.Int32)
  nameWithType: VectorFunctions.StdUniform(Int32)
- uid: NeuralNetLearning.Maths.VectorFunctions.StdUniform*
  name: StdUniform
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_StdUniform_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.StdUniform
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.StdUniform
  nameWithType: VectorFunctions.StdUniform
- uid: NeuralNetLearning.Maths.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.String)
  name: Write(Vector<Double>, String)
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_Write_MathNet_Numerics_LinearAlgebra_Vector_System_Double__System_String_
  commentId: M:NeuralNetLearning.Maths.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.String)
  name.vb: Write(Vector(Of Double), String)
  fullName: NeuralNetLearning.Maths.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector<System.Double>, System.String)
  fullName.vb: NeuralNetLearning.Maths.VectorFunctions.Write(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), System.String)
  nameWithType: VectorFunctions.Write(Vector<Double>, String)
  nameWithType.vb: VectorFunctions.Write(Vector(Of Double), String)
- uid: NeuralNetLearning.Maths.VectorFunctions.Write*
  name: Write
  href: api/NeuralNetLearning.Maths.VectorFunctions.html#NeuralNetLearning_Maths_VectorFunctions_Write_
  commentId: Overload:NeuralNetLearning.Maths.VectorFunctions.Write
  isSpec: "True"
  fullName: NeuralNetLearning.Maths.VectorFunctions.Write
  nameWithType: VectorFunctions.Write
- uid: NeuralNetLearning.NeuralNet
  name: NeuralNet
  href: api/NeuralNetLearning.NeuralNet.html
  commentId: T:NeuralNetLearning.NeuralNet
  fullName: NeuralNetLearning.NeuralNet
  nameWithType: NeuralNet
- uid: NeuralNetLearning.NeuralNet.ActiveLayerCount
  name: ActiveLayerCount
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_ActiveLayerCount
  commentId: P:NeuralNetLearning.NeuralNet.ActiveLayerCount
  fullName: NeuralNetLearning.NeuralNet.ActiveLayerCount
  nameWithType: NeuralNet.ActiveLayerCount
- uid: NeuralNetLearning.NeuralNet.ActiveLayerCount*
  name: ActiveLayerCount
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_ActiveLayerCount_
  commentId: Overload:NeuralNetLearning.NeuralNet.ActiveLayerCount
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNet.ActiveLayerCount
  nameWithType: NeuralNet.ActiveLayerCount
- uid: NeuralNetLearning.NeuralNet.AverageCost(System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}})
  name: AverageCost(IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>)
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_AverageCost_System_Collections_Generic_IEnumerable_System_ValueTuple_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double____
  commentId: M:NeuralNetLearning.NeuralNet.AverageCost(System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}})
  name.vb: AverageCost(IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))))
  fullName: NeuralNetLearning.NeuralNet.AverageCost(System.Collections.Generic.IEnumerable<System.ValueTuple<MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>>>)
  fullName.vb: NeuralNetLearning.NeuralNet.AverageCost(System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))))
  nameWithType: NeuralNet.AverageCost(IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>)
  nameWithType.vb: NeuralNet.AverageCost(IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))))
- uid: NeuralNetLearning.NeuralNet.AverageCost*
  name: AverageCost
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_AverageCost_
  commentId: Overload:NeuralNetLearning.NeuralNet.AverageCost
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNet.AverageCost
  nameWithType: NeuralNet.AverageCost
- uid: NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},System.Int32,System.Int32,System.Int32,System.Boolean)
  name: Fit(IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, Int32, Int32, Int32, Boolean)
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_Fit_System_Collections_Generic_IEnumerable_System_ValueTuple_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double____System_Collections_Generic_IEnumerable_System_ValueTuple_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double____System_Int32_System_Int32_System_Int32_System_Boolean_
  commentId: M:NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},System.Int32,System.Int32,System.Int32,System.Boolean)
  name.vb: Fit(IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), Int32, Int32, Int32, Boolean)
  fullName: NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable<System.ValueTuple<MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>>>, System.Collections.Generic.IEnumerable<System.ValueTuple<MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>>>, System.Int32, System.Int32, System.Int32, System.Boolean)
  fullName.vb: NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))), System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))), System.Int32, System.Int32, System.Int32, System.Boolean)
  nameWithType: NeuralNet.Fit(IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, Int32, Int32, Int32, Boolean)
  nameWithType.vb: NeuralNet.Fit(IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), Int32, Int32, Int32, Boolean)
- uid: NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},System.Int32,System.Int32,System.Boolean)
  name: Fit(IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, Int32, Int32, Boolean)
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_Fit_System_Collections_Generic_IEnumerable_System_ValueTuple_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double____System_Int32_System_Int32_System_Boolean_
  commentId: M:NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},System.Int32,System.Int32,System.Boolean)
  name.vb: Fit(IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), Int32, Int32, Boolean)
  fullName: NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable<System.ValueTuple<MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>>>, System.Int32, System.Int32, System.Boolean)
  fullName.vb: NeuralNetLearning.NeuralNet.Fit(System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))), System.Int32, System.Int32, System.Boolean)
  nameWithType: NeuralNet.Fit(IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, Int32, Int32, Boolean)
  nameWithType.vb: NeuralNet.Fit(IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), Int32, Int32, Boolean)
- uid: NeuralNetLearning.NeuralNet.Fit*
  name: Fit
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_Fit_
  commentId: Overload:NeuralNetLearning.NeuralNet.Fit
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNet.Fit
  nameWithType: NeuralNet.Fit
- uid: NeuralNetLearning.NeuralNet.LayerSizes
  name: LayerSizes
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_LayerSizes
  commentId: P:NeuralNetLearning.NeuralNet.LayerSizes
  fullName: NeuralNetLearning.NeuralNet.LayerSizes
  nameWithType: NeuralNet.LayerSizes
- uid: NeuralNetLearning.NeuralNet.LayerSizes*
  name: LayerSizes
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_LayerSizes_
  commentId: Overload:NeuralNetLearning.NeuralNet.LayerSizes
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNet.LayerSizes
  nameWithType: NeuralNet.LayerSizes
- uid: NeuralNetLearning.NeuralNet.Predict(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name: Predict(Vector<Double>)
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_Predict_MathNet_Numerics_LinearAlgebra_Vector_System_Double__
  commentId: M:NeuralNetLearning.NeuralNet.Predict(MathNet.Numerics.LinearAlgebra.Vector{System.Double})
  name.vb: Predict(Vector(Of Double))
  fullName: NeuralNetLearning.NeuralNet.Predict(MathNet.Numerics.LinearAlgebra.Vector<System.Double>)
  fullName.vb: NeuralNetLearning.NeuralNet.Predict(MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))
  nameWithType: NeuralNet.Predict(Vector<Double>)
  nameWithType.vb: NeuralNet.Predict(Vector(Of Double))
- uid: NeuralNetLearning.NeuralNet.Predict*
  name: Predict
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_Predict_
  commentId: Overload:NeuralNetLearning.NeuralNet.Predict
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNet.Predict
  nameWithType: NeuralNet.Predict
- uid: NeuralNetLearning.NeuralNet.WriteToDirectory(System.String)
  name: WriteToDirectory(String)
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_WriteToDirectory_System_String_
  commentId: M:NeuralNetLearning.NeuralNet.WriteToDirectory(System.String)
  fullName: NeuralNetLearning.NeuralNet.WriteToDirectory(System.String)
  nameWithType: NeuralNet.WriteToDirectory(String)
- uid: NeuralNetLearning.NeuralNet.WriteToDirectory*
  name: WriteToDirectory
  href: api/NeuralNetLearning.NeuralNet.html#NeuralNetLearning_NeuralNet_WriteToDirectory_
  commentId: Overload:NeuralNetLearning.NeuralNet.WriteToDirectory
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNet.WriteToDirectory
  nameWithType: NeuralNet.WriteToDirectory
- uid: NeuralNetLearning.NeuralNetFactory
  name: NeuralNetFactory
  href: api/NeuralNetLearning.NeuralNetFactory.html
  commentId: T:NeuralNetLearning.NeuralNetFactory
  fullName: NeuralNetLearning.NeuralNetFactory
  nameWithType: NeuralNetFactory
- uid: NeuralNetLearning.NeuralNetFactory.ActivationsFolder
  name: ActivationsFolder
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_ActivationsFolder
  commentId: F:NeuralNetLearning.NeuralNetFactory.ActivationsFolder
  fullName: NeuralNetLearning.NeuralNetFactory.ActivationsFolder
  nameWithType: NeuralNetFactory.ActivationsFolder
- uid: NeuralNetLearning.NeuralNetFactory.CostFolder
  name: CostFolder
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_CostFolder
  commentId: F:NeuralNetLearning.NeuralNetFactory.CostFolder
  fullName: NeuralNetLearning.NeuralNetFactory.CostFolder
  nameWithType: NeuralNetFactory.CostFolder
- uid: NeuralNetLearning.NeuralNetFactory.GradientDescenderFolder
  name: GradientDescenderFolder
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_GradientDescenderFolder
  commentId: F:NeuralNetLearning.NeuralNetFactory.GradientDescenderFolder
  fullName: NeuralNetLearning.NeuralNetFactory.GradientDescenderFolder
  nameWithType: NeuralNetFactory.GradientDescenderFolder
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig})
  name: OptimisedForRelu(IList<NeuralLayerConfig>)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForRelu_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig})
  name.vb: OptimisedForRelu(IList(Of NeuralLayerConfig))
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig))
  nameWithType: NeuralNetFactory.OptimisedForRelu(IList<NeuralLayerConfig>)
  nameWithType.vb: NeuralNetFactory.OptimisedForRelu(IList(Of NeuralLayerConfig))
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name: OptimisedForRelu(IList<NeuralLayerConfig>, GradientDescender, CostFunction)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForRelu_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__NeuralNetLearning_GradientDescent_GradientDescender_NeuralNetLearning_CostFunctions_CostFunction_
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name.vb: OptimisedForRelu(IList(Of NeuralLayerConfig), GradientDescender, CostFunction)
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>, NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig), NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  nameWithType: NeuralNetFactory.OptimisedForRelu(IList<NeuralLayerConfig>, GradientDescender, CostFunction)
  nameWithType.vb: NeuralNetFactory.OptimisedForRelu(IList(Of NeuralLayerConfig), GradientDescender, CostFunction)
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu*
  name: OptimisedForRelu
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForRelu_
  commentId: Overload:NeuralNetLearning.NeuralNetFactory.OptimisedForRelu
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForRelu
  nameWithType: NeuralNetFactory.OptimisedForRelu
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig})
  name: OptimisedForTanh(IList<NeuralLayerConfig>)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTanh_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig})
  name.vb: OptimisedForTanh(IList(Of NeuralLayerConfig))
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig))
  nameWithType: NeuralNetFactory.OptimisedForTanh(IList<NeuralLayerConfig>)
  nameWithType.vb: NeuralNetFactory.OptimisedForTanh(IList(Of NeuralLayerConfig))
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name: OptimisedForTanh(IList<NeuralLayerConfig>, GradientDescender, CostFunction)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTanh_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__NeuralNetLearning_GradientDescent_GradientDescender_NeuralNetLearning_CostFunctions_CostFunction_
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name.vb: OptimisedForTanh(IList(Of NeuralLayerConfig), GradientDescender, CostFunction)
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>, NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig), NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  nameWithType: NeuralNetFactory.OptimisedForTanh(IList<NeuralLayerConfig>, GradientDescender, CostFunction)
  nameWithType.vb: NeuralNetFactory.OptimisedForTanh(IList(Of NeuralLayerConfig), GradientDescender, CostFunction)
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh*
  name: OptimisedForTanh
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTanh_
  commentId: Overload:NeuralNetLearning.NeuralNetFactory.OptimisedForTanh
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTanh
  nameWithType: NeuralNetFactory.OptimisedForTanh
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name: OptimisedForTrainingData(IList<NeuralLayerConfig>, IEnumerable<Vector<Double>>, GradientDescender, CostFunction)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTrainingData_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__System_Collections_Generic_IEnumerable_MathNet_Numerics_LinearAlgebra_Vector_System_Double___NeuralNetLearning_GradientDescent_GradientDescender_NeuralNetLearning_CostFunctions_CostFunction_
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name.vb: OptimisedForTrainingData(IList(Of NeuralLayerConfig), IEnumerable(Of Vector(Of Double)), GradientDescender, CostFunction)
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>, System.Collections.Generic.IEnumerable<MathNet.Numerics.LinearAlgebra.Vector<System.Double>>, NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig), System.Collections.Generic.IEnumerable(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double)), NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  nameWithType: NeuralNetFactory.OptimisedForTrainingData(IList<NeuralLayerConfig>, IEnumerable<Vector<Double>>, GradientDescender, CostFunction)
  nameWithType.vb: NeuralNetFactory.OptimisedForTrainingData(IList(Of NeuralLayerConfig), IEnumerable(Of Vector(Of Double)), GradientDescender, CostFunction)
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}})
  name: OptimisedForTrainingData(IList<NeuralLayerConfig>, IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTrainingData_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__System_Collections_Generic_IEnumerable_System_ValueTuple_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double____
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}})
  name.vb: OptimisedForTrainingData(IList(Of NeuralLayerConfig), IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))))
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>, System.Collections.Generic.IEnumerable<System.ValueTuple<MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>>>)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig), System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))))
  nameWithType: NeuralNetFactory.OptimisedForTrainingData(IList<NeuralLayerConfig>, IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>)
  nameWithType.vb: NeuralNetFactory.OptimisedForTrainingData(IList(Of NeuralLayerConfig), IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))))
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name: OptimisedForTrainingData(IList<NeuralLayerConfig>, IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, GradientDescender, CostFunction)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTrainingData_System_Collections_Generic_IList_NeuralNetLearning_LayerConfig_NeuralLayerConfig__System_Collections_Generic_IEnumerable_System_ValueTuple_MathNet_Numerics_LinearAlgebra_Vector_System_Double__MathNet_Numerics_LinearAlgebra_Vector_System_Double____NeuralNetLearning_GradientDescent_GradientDescender_NeuralNetLearning_CostFunctions_CostFunction_
  commentId: M:NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList{NeuralNetLearning.LayerConfig.NeuralLayerConfig},System.Collections.Generic.IEnumerable{System.ValueTuple{MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double}}},NeuralNetLearning.GradientDescent.GradientDescender,NeuralNetLearning.CostFunctions.CostFunction)
  name.vb: OptimisedForTrainingData(IList(Of NeuralLayerConfig), IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), GradientDescender, CostFunction)
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList<NeuralNetLearning.LayerConfig.NeuralLayerConfig>, System.Collections.Generic.IEnumerable<System.ValueTuple<MathNet.Numerics.LinearAlgebra.Vector<System.Double>, MathNet.Numerics.LinearAlgebra.Vector<System.Double>>>, NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  fullName.vb: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData(System.Collections.Generic.IList(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig), System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of MathNet.Numerics.LinearAlgebra.Vector(Of System.Double), MathNet.Numerics.LinearAlgebra.Vector(Of System.Double))), NeuralNetLearning.GradientDescent.GradientDescender, NeuralNetLearning.CostFunctions.CostFunction)
  nameWithType: NeuralNetFactory.OptimisedForTrainingData(IList<NeuralLayerConfig>, IEnumerable<(Vector<Double> input, Vector<Double> expectedOutput)>, GradientDescender, CostFunction)
  nameWithType.vb: NeuralNetFactory.OptimisedForTrainingData(IList(Of NeuralLayerConfig), IEnumerable(Of (input As Vector(Of Double), expectedOutput As Vector(Of Double))(Of Vector(Of Double), Vector(Of Double))), GradientDescender, CostFunction)
- uid: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData*
  name: OptimisedForTrainingData
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_OptimisedForTrainingData_
  commentId: Overload:NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNetFactory.OptimisedForTrainingData
  nameWithType: NeuralNetFactory.OptimisedForTrainingData
- uid: NeuralNetLearning.NeuralNetFactory.ParamsFolder
  name: ParamsFolder
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_ParamsFolder
  commentId: F:NeuralNetLearning.NeuralNetFactory.ParamsFolder
  fullName: NeuralNetLearning.NeuralNetFactory.ParamsFolder
  nameWithType: NeuralNetFactory.ParamsFolder
- uid: NeuralNetLearning.NeuralNetFactory.ReadFromDirectory(System.String)
  name: ReadFromDirectory(String)
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_ReadFromDirectory_System_String_
  commentId: M:NeuralNetLearning.NeuralNetFactory.ReadFromDirectory(System.String)
  fullName: NeuralNetLearning.NeuralNetFactory.ReadFromDirectory(System.String)
  nameWithType: NeuralNetFactory.ReadFromDirectory(String)
- uid: NeuralNetLearning.NeuralNetFactory.ReadFromDirectory*
  name: ReadFromDirectory
  href: api/NeuralNetLearning.NeuralNetFactory.html#NeuralNetLearning_NeuralNetFactory_ReadFromDirectory_
  commentId: Overload:NeuralNetLearning.NeuralNetFactory.ReadFromDirectory
  isSpec: "True"
  fullName: NeuralNetLearning.NeuralNetFactory.ReadFromDirectory
  nameWithType: NeuralNetFactory.ReadFromDirectory
- uid: NeuralNetLearning.Serialization
  name: NeuralNetLearning.Serialization
  href: api/NeuralNetLearning.Serialization.html
  commentId: N:NeuralNetLearning.Serialization
  fullName: NeuralNetLearning.Serialization
  nameWithType: NeuralNetLearning.Serialization
- uid: NeuralNetLearning.Serialization.SerializableHyperParameter
  name: SerializableHyperParameter
  href: api/NeuralNetLearning.Serialization.SerializableHyperParameter.html
  commentId: T:NeuralNetLearning.Serialization.SerializableHyperParameter
  fullName: NeuralNetLearning.Serialization.SerializableHyperParameter
  nameWithType: SerializableHyperParameter
- uid: NeuralNetLearning.Serialization.SerializableHyperParameter.#ctor(System.String)
  name: SerializableHyperParameter(String)
  href: api/NeuralNetLearning.Serialization.SerializableHyperParameter.html#NeuralNetLearning_Serialization_SerializableHyperParameter__ctor_System_String_
  commentId: M:NeuralNetLearning.Serialization.SerializableHyperParameter.#ctor(System.String)
  fullName: NeuralNetLearning.Serialization.SerializableHyperParameter.SerializableHyperParameter(System.String)
  nameWithType: SerializableHyperParameter.SerializableHyperParameter(String)
- uid: NeuralNetLearning.Serialization.SerializableHyperParameter.#ctor*
  name: SerializableHyperParameter
  href: api/NeuralNetLearning.Serialization.SerializableHyperParameter.html#NeuralNetLearning_Serialization_SerializableHyperParameter__ctor_
  commentId: Overload:NeuralNetLearning.Serialization.SerializableHyperParameter.#ctor
  isSpec: "True"
  fullName: NeuralNetLearning.Serialization.SerializableHyperParameter.SerializableHyperParameter
  nameWithType: SerializableHyperParameter.SerializableHyperParameter
- uid: NeuralNetLearning.Serialization.SerializableHyperParameter.Name
  name: Name
  href: api/NeuralNetLearning.Serialization.SerializableHyperParameter.html#NeuralNetLearning_Serialization_SerializableHyperParameter_Name
  commentId: F:NeuralNetLearning.Serialization.SerializableHyperParameter.Name
  fullName: NeuralNetLearning.Serialization.SerializableHyperParameter.Name
  nameWithType: SerializableHyperParameter.Name
- uid: nlconf
  name: Neural Layer Configuration
  href: articles/neural-layer-config.html
- uid: nnet
  name: Neural Net
  href: articles/neural-net.html
- uid: nnet-factory
  name: Neural Net Factory
  href: articles/neural-net-factory.html
- uid: param
  name: Parameter (Technical)
  href: articles/parameter.html
- uid: shparam
  name: Serializable Hyper Parameter (Technical)
  href: articles/serializable-hyper-parameter.html

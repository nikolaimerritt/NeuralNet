### YamlMime:ManagedReference
items:
- uid: NeuralNetLearning.LayerConfig.OutputLayer
  commentId: T:NeuralNetLearning.LayerConfig.OutputLayer
  id: OutputLayer
  parent: NeuralNetLearning.LayerConfig
  children:
  - NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32,NeuralNetLearning.Maths.Activations.Activation)
  - NeuralNetLearning.LayerConfig.OutputLayer.Activation
  langs:
  - csharp
  - vb
  name: OutputLayer
  nameWithType: OutputLayer
  fullName: NeuralNetLearning.LayerConfig.OutputLayer
  type: Class
  source:
    remote:
      path: NeuralNetLearning/LayerConfig/OutputLayer.cs
      branch: master
      repo: https://github.com/nikolaimerritt/NeuralNet.git
    id: OutputLayer
    path: NeuralNetLearning/LayerConfig/OutputLayer.cs
    startLine: 4
  assemblies:
  - NeuralNet
  namespace: NeuralNetLearning.LayerConfig
  syntax:
    content: 'public class OutputLayer : NeuralLayerConfig, IEquatable<NeuralLayerConfig>, IEquatable<OutputLayer>'
    content.vb: >-
      Public Class OutputLayer
          Inherits NeuralLayerConfig
          Implements IEquatable(Of NeuralLayerConfig), IEquatable(Of OutputLayer)
  inheritance:
  - System.Object
  - NeuralNetLearning.LayerConfig.NeuralLayerConfig
  implements:
  - System.IEquatable{NeuralNetLearning.LayerConfig.NeuralLayerConfig}
  - System.IEquatable{NeuralNetLearning.LayerConfig.OutputLayer}
  inheritedMembers:
  - NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NeuralNetLearning.LayerConfig.OutputLayer.Activation
  commentId: P:NeuralNetLearning.LayerConfig.OutputLayer.Activation
  id: Activation
  parent: NeuralNetLearning.LayerConfig.OutputLayer
  langs:
  - csharp
  - vb
  name: Activation
  nameWithType: OutputLayer.Activation
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.Activation
  type: Property
  source:
    remote:
      path: NeuralNetLearning/LayerConfig/OutputLayer.cs
      branch: master
      repo: https://github.com/nikolaimerritt/NeuralNet.git
    id: Activation
    path: NeuralNetLearning/LayerConfig/OutputLayer.cs
    startLine: 6
  assemblies:
  - NeuralNet
  namespace: NeuralNetLearning.LayerConfig
  syntax:
    content: public Activation Activation { get; }
    parameters: []
    return:
      type: NeuralNetLearning.Maths.Activations.Activation
    content.vb: Public ReadOnly Property Activation As Activation
  overload: NeuralNetLearning.LayerConfig.OutputLayer.Activation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32,NeuralNetLearning.Maths.Activations.Activation)
  commentId: M:NeuralNetLearning.LayerConfig.OutputLayer.#ctor(System.Int32,NeuralNetLearning.Maths.Activations.Activation)
  id: '#ctor(System.Int32,NeuralNetLearning.Maths.Activations.Activation)'
  parent: NeuralNetLearning.LayerConfig.OutputLayer
  langs:
  - csharp
  - vb
  name: OutputLayer(Int32, Activation)
  nameWithType: OutputLayer.OutputLayer(Int32, Activation)
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.OutputLayer(System.Int32, NeuralNetLearning.Maths.Activations.Activation)
  type: Constructor
  source:
    remote:
      path: NeuralNetLearning/LayerConfig/OutputLayer.cs
      branch: master
      repo: https://github.com/nikolaimerritt/NeuralNet.git
    id: .ctor
    path: NeuralNetLearning/LayerConfig/OutputLayer.cs
    startLine: 7
  assemblies:
  - NeuralNet
  namespace: NeuralNetLearning.LayerConfig
  syntax:
    content: public OutputLayer(int size, Activation activation)
    parameters:
    - id: size
      type: System.Int32
    - id: activation
      type: NeuralNetLearning.Maths.Activations.Activation
    content.vb: Public Sub New(size As Integer, activation As Activation)
  overload: NeuralNetLearning.LayerConfig.OutputLayer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NeuralNetLearning.LayerConfig
  commentId: N:NeuralNetLearning.LayerConfig
  name: NeuralNetLearning.LayerConfig
  nameWithType: NeuralNetLearning.LayerConfig
  fullName: NeuralNetLearning.LayerConfig
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig
  commentId: T:NeuralNetLearning.LayerConfig.NeuralLayerConfig
  parent: NeuralNetLearning.LayerConfig
  name: NeuralLayerConfig
  nameWithType: NeuralLayerConfig
  fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig
- uid: System.IEquatable{NeuralNetLearning.LayerConfig.NeuralLayerConfig}
  commentId: T:System.IEquatable{NeuralNetLearning.LayerConfig.NeuralLayerConfig}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<NeuralLayerConfig>
  nameWithType: IEquatable<NeuralLayerConfig>
  fullName: System.IEquatable<NeuralNetLearning.LayerConfig.NeuralLayerConfig>
  nameWithType.vb: IEquatable(Of NeuralLayerConfig)
  fullName.vb: System.IEquatable(Of NeuralNetLearning.LayerConfig.NeuralLayerConfig)
  name.vb: IEquatable(Of NeuralLayerConfig)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig
    name: NeuralLayerConfig
    nameWithType: NeuralLayerConfig
    fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig
    name: NeuralLayerConfig
    nameWithType: NeuralLayerConfig
    fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{NeuralNetLearning.LayerConfig.OutputLayer}
  commentId: T:System.IEquatable{NeuralNetLearning.LayerConfig.OutputLayer}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<OutputLayer>
  nameWithType: IEquatable<OutputLayer>
  fullName: System.IEquatable<NeuralNetLearning.LayerConfig.OutputLayer>
  nameWithType.vb: IEquatable(Of OutputLayer)
  fullName.vb: System.IEquatable(Of NeuralNetLearning.LayerConfig.OutputLayer)
  name.vb: IEquatable(Of OutputLayer)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NeuralNetLearning.LayerConfig.OutputLayer
    name: OutputLayer
    nameWithType: OutputLayer
    fullName: NeuralNetLearning.LayerConfig.OutputLayer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NeuralNetLearning.LayerConfig.OutputLayer
    name: OutputLayer
    nameWithType: OutputLayer
    fullName: NeuralNetLearning.LayerConfig.OutputLayer
  - name: )
    nameWithType: )
    fullName: )
- uid: NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  commentId: P:NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
  parent: NeuralNetLearning.LayerConfig.NeuralLayerConfig
  name: Size
  nameWithType: NeuralLayerConfig.Size
  fullName: NeuralNetLearning.LayerConfig.NeuralLayerConfig.Size
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NeuralNetLearning.LayerConfig.OutputLayer.Activation*
  commentId: Overload:NeuralNetLearning.LayerConfig.OutputLayer.Activation
  name: Activation
  nameWithType: OutputLayer.Activation
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.Activation
- uid: NeuralNetLearning.Maths.Activations.Activation
  commentId: T:NeuralNetLearning.Maths.Activations.Activation
  parent: NeuralNetLearning.Maths.Activations
  name: Activation
  nameWithType: Activation
  fullName: NeuralNetLearning.Maths.Activations.Activation
- uid: NeuralNetLearning.Maths.Activations
  commentId: N:NeuralNetLearning.Maths.Activations
  name: NeuralNetLearning.Maths.Activations
  nameWithType: NeuralNetLearning.Maths.Activations
  fullName: NeuralNetLearning.Maths.Activations
- uid: NeuralNetLearning.LayerConfig.OutputLayer.#ctor*
  commentId: Overload:NeuralNetLearning.LayerConfig.OutputLayer.#ctor
  name: OutputLayer
  nameWithType: OutputLayer.OutputLayer
  fullName: NeuralNetLearning.LayerConfig.OutputLayer.OutputLayer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

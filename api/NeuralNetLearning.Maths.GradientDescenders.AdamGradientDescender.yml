### YamlMime:ManagedReference
items:
- uid: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender
  commentId: T:NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender
  id: AdamGradientDescender
  parent: NeuralNetLearning.Maths.GradientDescenders
  children:
  - NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor
  - NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double,System.Int32,NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  langs:
  - csharp
  - vb
  name: AdamGradientDescender
  nameWithType: AdamGradientDescender
  fullName: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender
  type: Class
  source:
    remote:
      path: NeuralNetLearning/Maths/GradientDescenders/AdamGradientDescender.cs
      branch: master
      repo: https://github.com/nikolaimerritt/NeuralNet.git
    id: AdamGradientDescender
    path: NeuralNetLearning/Maths/GradientDescenders/AdamGradientDescender.cs
    startLine: 8
  assemblies:
  - NeuralNet
  namespace: NeuralNetLearning.Maths.GradientDescenders
  syntax:
    content: 'public class AdamGradientDescender : GradientDescender'
    content.vb: >-
      Public Class AdamGradientDescender
          Inherits GradientDescender
  inheritance:
  - System.Object
  - NeuralNetLearning.Maths.GradientDescenders.GradientDescender
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double,System.Int32,NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  commentId: M:NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor(System.Double,System.Double,System.Double,System.Int32,NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)
  id: '#ctor(System.Double,System.Double,System.Double,System.Int32,NeuralNetLearning.Maths.Parameter,NeuralNetLearning.Maths.Parameter)'
  parent: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender
  langs:
  - csharp
  - vb
  name: AdamGradientDescender(Double, Double, Double, Int32, Parameter, Parameter)
  nameWithType: AdamGradientDescender.AdamGradientDescender(Double, Double, Double, Int32, Parameter, Parameter)
  fullName: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.AdamGradientDescender(System.Double, System.Double, System.Double, System.Int32, NeuralNetLearning.Maths.Parameter, NeuralNetLearning.Maths.Parameter)
  type: Constructor
  source:
    remote:
      path: NeuralNetLearning/Maths/GradientDescenders/AdamGradientDescender.cs
      branch: master
      repo: https://github.com/nikolaimerritt/NeuralNet.git
    id: .ctor
    path: NeuralNetLearning/Maths/GradientDescenders/AdamGradientDescender.cs
    startLine: 30
  assemblies:
  - NeuralNet
  namespace: NeuralNetLearning.Maths.GradientDescenders
  syntax:
    content: public AdamGradientDescender(double learningRate, double momentumDecay, double varianceDecay, int step, Parameter momentum, Parameter variance)
    parameters:
    - id: learningRate
      type: System.Double
    - id: momentumDecay
      type: System.Double
    - id: varianceDecay
      type: System.Double
    - id: step
      type: System.Int32
    - id: momentum
      type: NeuralNetLearning.Maths.Parameter
    - id: variance
      type: NeuralNetLearning.Maths.Parameter
    content.vb: Public Sub New(learningRate As Double, momentumDecay As Double, varianceDecay As Double, step As Integer, momentum As Parameter, variance As Parameter)
  overload: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor
  commentId: M:NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor
  id: '#ctor'
  parent: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender
  langs:
  - csharp
  - vb
  name: AdamGradientDescender()
  nameWithType: AdamGradientDescender.AdamGradientDescender()
  fullName: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.AdamGradientDescender()
  type: Constructor
  source:
    remote:
      path: NeuralNetLearning/Maths/GradientDescenders/AdamGradientDescender.cs
      branch: master
      repo: https://github.com/nikolaimerritt/NeuralNet.git
    id: .ctor
    path: NeuralNetLearning/Maths/GradientDescenders/AdamGradientDescender.cs
    startLine: 47
  assemblies:
  - NeuralNet
  namespace: NeuralNetLearning.Maths.GradientDescenders
  syntax:
    content: public AdamGradientDescender()
    content.vb: Public Sub New
  overload: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NeuralNetLearning.Maths.GradientDescenders
  commentId: N:NeuralNetLearning.Maths.GradientDescenders
  name: NeuralNetLearning.Maths.GradientDescenders
  nameWithType: NeuralNetLearning.Maths.GradientDescenders
  fullName: NeuralNetLearning.Maths.GradientDescenders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NeuralNetLearning.Maths.GradientDescenders.GradientDescender
  commentId: T:NeuralNetLearning.Maths.GradientDescenders.GradientDescender
  parent: NeuralNetLearning.Maths.GradientDescenders
  name: GradientDescender
  nameWithType: GradientDescender
  fullName: NeuralNetLearning.Maths.GradientDescenders.GradientDescender
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor*
  commentId: Overload:NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.#ctor
  name: AdamGradientDescender
  nameWithType: AdamGradientDescender.AdamGradientDescender
  fullName: NeuralNetLearning.Maths.GradientDescenders.AdamGradientDescender.AdamGradientDescender
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NeuralNetLearning.Maths.Parameter
  commentId: T:NeuralNetLearning.Maths.Parameter
  parent: NeuralNetLearning.Maths
  name: Parameter
  nameWithType: Parameter
  fullName: NeuralNetLearning.Maths.Parameter
- uid: NeuralNetLearning.Maths
  commentId: N:NeuralNetLearning.Maths
  name: NeuralNetLearning.Maths
  nameWithType: NeuralNetLearning.Maths
  fullName: NeuralNetLearning.Maths
